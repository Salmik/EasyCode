{"interfaceLanguages":{"occ":[{"children":[{"title":"Variables","type":"groupMarker"},{"path":"\/documentation\/easycode\/easycodeversionnumber","title":"EasyCodeVersionNumber","type":"var"},{"path":"\/documentation\/easycode\/easycodeversionstring","title":"EasyCodeVersionString","type":"var"}],"path":"\/documentation\/easycode","title":"EasyCode","type":"module"}],"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/easycode\/biometricidauth\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/biometricidauth\/biometrytype-swift.property","title":"var biometryType: BiometryType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/biometricidauth\/authenticateuser(reason:fallbacktitle:canceltitle:completion:)","title":"func authenticateUser(reason: String, fallbackTitle: String, cancelTitle: String, completion: (_ result: Result) -> Void)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/easycode\/biometricidauth\/biometrytype-swift.enum\/faceid","title":"case faceID","type":"case"},{"path":"\/documentation\/easycode\/biometricidauth\/biometrytype-swift.enum\/none","title":"case none","type":"case"},{"path":"\/documentation\/easycode\/biometricidauth\/biometrytype-swift.enum\/touchid","title":"case touchID","type":"case"},{"path":"\/documentation\/easycode\/biometricidauth\/biometrytype-swift.enum\/unknown","title":"case unknown","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/biometricidauth\/biometrytype-swift.enum\/title","title":"var title: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/easycode\/biometricidauth\/biometrytype-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/easycode\/biometricidauth\/biometrytype-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/easycode\/biometricidauth\/biometrytype-swift.enum","title":"BiometricIDAuth.BiometryType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/easycode\/biometricidauth\/result\/authenticated","title":"case authenticated","type":"case"},{"path":"\/documentation\/easycode\/biometricidauth\/result\/cancelled","title":"case cancelled","type":"case"},{"path":"\/documentation\/easycode\/biometricidauth\/result\/disabledinsystemsappsettings","title":"case disabledInSystemsAppSettings","type":"case"},{"path":"\/documentation\/easycode\/biometricidauth\/result\/failed","title":"case failed","type":"case"},{"path":"\/documentation\/easycode\/biometricidauth\/result\/fallbackaction","title":"case fallbackAction","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/easycode\/biometricidauth\/result\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/easycode\/biometricidauth\/result\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/easycode\/biometricidauth\/result","title":"BiometricIDAuth.Result","type":"enum"}],"path":"\/documentation\/easycode\/biometricidauth","title":"BiometricIDAuth","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/easycode\/consolelogger\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/consolelogger\/log(request:)","title":"func log(request: URLRequest)","type":"method"},{"path":"\/documentation\/easycode\/consolelogger\/log(request:response:responsedata:error:)","title":"func log(request: URLRequest, response: HTTPURLResponse?, responseData: Data?, error: Error?)","type":"method"}],"path":"\/documentation\/easycode\/consolelogger","title":"ConsoleLogger","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/easycode\/contactsworker\/contact\/==(_:_:)","title":"static func == (Contact, Contact) -> Bool","type":"op"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/contactsworker\/contact\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/easycode\/contactsworker\/contact\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/easycode\/contactsworker\/contact\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/easycode\/contactsworker\/contact","title":"ContactsWorker.Contact","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/easycode\/contactsworker\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/contactsworker\/contacts","title":"var contacts: [Contact]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/contactsworker\/addcontacttoaddressbook(_:)","title":"func addContactToAddressBook(Contact)","type":"method"},{"path":"\/documentation\/easycode\/contactsworker\/deletecontact(by:)","title":"func deleteContact(by: String) -> Bool","type":"method"},{"path":"\/documentation\/easycode\/contactsworker\/loadphonebookcontacts(isonlyuniquerequired:isneedtosort:completion:)","title":"func loadPhoneBookContacts(isOnlyUniqueRequired: Bool, isNeedToSort: Bool, completion: () -> Void)","type":"method"},{"path":"\/documentation\/easycode\/contactsworker\/requestaccessforcontacts(completion:)","title":"func requestAccessForContacts(completion: (Bool) -> Void)","type":"method"},{"path":"\/documentation\/easycode\/contactsworker\/updatecontact(by:with:)","title":"func updateContact(by: String, with: Contact) -> Bool","type":"method"}],"path":"\/documentation\/easycode\/contactsworker","title":"ContactsWorker","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/easycode\/coredatamanager\/init(databasename:)","title":"init(databaseName: DataBaseNameProtocol)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/coredatamanager\/all(with:sortdescriptors:)","title":"func all<T>(with: NSPredicate?, sortDescriptors: [NSSortDescriptor]?) throws -> [T]","type":"method"},{"path":"\/documentation\/easycode\/coredatamanager\/batchdelete(entity:predicate:)","title":"func batchDelete<T>(entity: T.Type, predicate: NSPredicate?) throws","type":"method"},{"path":"\/documentation\/easycode\/coredatamanager\/batchinsert(entity:objects:)","title":"func batchInsert<T>(entity: T.Type, objects: [[String : Any]]) throws","type":"method"},{"path":"\/documentation\/easycode\/coredatamanager\/batchupdate(entity:predicate:propertiestoupdate:)","title":"func batchUpdate<T>(entity: T.Type, predicate: NSPredicate?, propertiesToUpdate: [String : Any]) throws","type":"method"},{"path":"\/documentation\/easycode\/coredatamanager\/count(entity:predicate:)","title":"func count<T>(entity: T.Type, predicate: NSPredicate?) throws -> Int","type":"method"},{"path":"\/documentation\/easycode\/coredatamanager\/create(issaverequired:completion:)","title":"func create<T>(isSaveRequired: Bool, completion: (T) -> Void)","type":"method"},{"path":"\/documentation\/easycode\/coredatamanager\/delete(object:)","title":"func delete<T>(object: T)","type":"method"},{"path":"\/documentation\/easycode\/coredatamanager\/deleteall(type:)","title":"func deleteAll<T>(type: T.Type) throws","type":"method"},{"path":"\/documentation\/easycode\/coredatamanager\/object(with:)","title":"func object<T>(with: NSPredicate) throws -> T?","type":"method"},{"path":"\/documentation\/easycode\/coredatamanager\/performbackgroundtask(predicate:sortdescriptors:fetchlimit:fetchoffset:completion:)","title":"func performBackgroundTask<T>(predicate: NSPredicate?, sortDescriptors: [NSSortDescriptor]?, fetchLimit: Int?, fetchOffset: Int?, completion: (Result<[T], Error>) -> Void)","type":"method"},{"path":"\/documentation\/easycode\/coredatamanager\/recreatedatabase()","title":"func recreateDatabase()","type":"method"},{"path":"\/documentation\/easycode\/coredatamanager\/savecontext()","title":"func saveContext()","type":"method"},{"path":"\/documentation\/easycode\/coredatamanager\/update(with:completion:)","title":"func update<T>(with: NSPredicate, completion: (T) -> Void) throws","type":"method"}],"path":"\/documentation\/easycode\/coredatamanager","title":"CoreDataManager","type":"class"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/easycode\/debounceprovider\/debounceclosure","title":"DebounceProvider.DebounceClosure","type":"typealias"},{"path":"\/documentation\/easycode\/debounceprovider\/updateclosure","title":"DebounceProvider.UpdateClosure","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/debounceprovider\/debounce(milliseconds:queue:performwhiledebounce:update:)","title":"static func debounce(milliseconds: Int, queue: DispatchQueue, performWhileDebounce: DebounceClosure, update: UpdateClosure) -> UpdateClosure","type":"method"}],"path":"\/documentation\/easycode\/debounceprovider","title":"DebounceProvider","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/easycode\/dependencyfactory\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/dependencyfactory\/scoped(name:_:configure:)","title":"func scoped<T>(name: String, () -> T, configure: ((T) -> Void)?) -> T","type":"method"},{"path":"\/documentation\/easycode\/dependencyfactory\/scoped(name:factory:configure:)","title":"func scoped<T>(name: String, factory: () -> T, configure: ((T) -> Void)?) -> T","type":"method"},{"path":"\/documentation\/easycode\/dependencyfactory\/shared(name:_:configure:)","title":"func shared<T>(name: String, () -> T, configure: ((T) -> Void)?) -> T","type":"method"},{"path":"\/documentation\/easycode\/dependencyfactory\/shared(name:factory:configure:)","title":"func shared<T>(name: String, factory: () -> T, configure: ((T) -> Void)?) -> T","type":"method"},{"path":"\/documentation\/easycode\/dependencyfactory\/unshared(name:_:configure:)","title":"func unshared<T>(name: String, () -> T, configure: ((T) -> Void)?) -> T","type":"method"},{"path":"\/documentation\/easycode\/dependencyfactory\/unshared(name:factory:configure:)","title":"func unshared<T>(name: String, factory: () -> T, configure: ((T) -> Void)?) -> T","type":"method"},{"path":"\/documentation\/easycode\/dependencyfactory\/weakshared(name:_:configure:)","title":"func weakShared<T>(name: String, () -> T, configure: ((T) -> Void)?) -> T","type":"method"},{"path":"\/documentation\/easycode\/dependencyfactory\/weakshared(name:factory:configure:)","title":"func weakShared<T>(name: String, factory: () -> T, configure: ((T) -> Void)?) -> T","type":"method"}],"path":"\/documentation\/easycode\/dependencyfactory","title":"DependencyFactory","type":"class"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/easycode\/dispatchworker\/executeclosure","title":"DispatchWorker.ExecuteClosure","type":"typealias"},{"path":"\/documentation\/easycode\/dispatchworker\/updateclosure","title":"DispatchWorker.UpdateClosure","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/dispatchworker\/execute(on:updatedelay:execute:update:)","title":"class func execute(on: DispatchQueue, updateDelay: Int?, execute: ExecuteClosure, update: UpdateClosure?)","type":"method"}],"path":"\/documentation\/easycode\/dispatchworker","title":"DispatchWorker","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/easycode\/dynamicheightcollectionview\/init(layout:)","title":"init(layout: UICollectionViewLayout)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/dynamicheightcollectionview\/intrinsiccontentsize","title":"var intrinsicContentSize: CGSize","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/dynamicheightcollectionview\/layoutsubviews()","title":"func layoutSubviews()","type":"method"}],"path":"\/documentation\/easycode\/dynamicheightcollectionview","title":"DynamicHeightCollectionView","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/easycode\/hostingview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/easycode\/hostingview\/init(rootview:frame:)","title":"init(rootView: T, frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/hostingview\/hostingcontroller","title":"var hostingController: UIHostingController<T>","type":"property"},{"path":"\/documentation\/easycode\/hostingview\/rootview","title":"var rootView: T","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/hostingview\/addchildcontrollerto(_:)","title":"func addChildControllerTo(UIViewController)","type":"method"},{"path":"\/documentation\/easycode\/hostingview\/removechildcontrollerto(_:)","title":"func removeChildControllerTo(UIViewController)","type":"method"}],"path":"\/documentation\/easycode\/hostingview","title":"HostingView","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/easycode\/jsonworker\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/jsonworker\/makejson(from:)","title":"func makeJSon<T>(from: T) -> String","type":"method"},{"path":"\/documentation\/easycode\/jsonworker\/read(fromfile:)","title":"func read<T>(fromFile: String) -> T?","type":"method"}],"path":"\/documentation\/easycode\/jsonworker","title":"JSONWorker","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/jailbreakdetection\/isjailbrokendevice","title":"var isJailbrokenDevice: Bool","type":"property"}],"path":"\/documentation\/easycode\/jailbreakdetection","title":"JailbreakDetection","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/easycode\/keychainservice\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/keychainservice\/delete(key:)","title":"func delete(key: KeychainKeyProtocol) throws -> Bool","type":"method"},{"path":"\/documentation\/easycode\/keychainservice\/load(key:)","title":"func load(key: KeychainKeyProtocol) throws -> Data","type":"method"},{"path":"\/documentation\/easycode\/keychainservice\/save(key:data:)","title":"func save(key: KeychainKeyProtocol, data: Data) throws -> Bool","type":"method"},{"path":"\/documentation\/easycode\/keychainservice\/update(key:data:)","title":"func update(key: KeychainKeyProtocol, data: Data) throws -> Bool","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/easycode\/keychainservice\/keychainerror\/itemnotfound","title":"case itemNotFound","type":"case"},{"path":"\/documentation\/easycode\/keychainservice\/keychainerror\/unexpecteddata","title":"case unexpectedData","type":"case"},{"path":"\/documentation\/easycode\/keychainservice\/keychainerror\/unhandlederror(status:)","title":"case unhandledError(status: OSStatus)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/keychainservice\/keychainerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/easycode\/keychainservice\/keychainerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/easycode\/keychainservice\/keychainerror","title":"KeychainService.KeychainError","type":"enum"}],"path":"\/documentation\/easycode\/keychainservice","title":"KeychainService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/easycode\/localfilemanager\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/localfilemanager\/doesfileexist(with:in:)","title":"func doesFileExist(with: String, in: FolderTypeProtocol?) throws -> Bool","type":"method"},{"path":"\/documentation\/easycode\/localfilemanager\/fileurl(withname:in:)","title":"func fileUrl(withName: String, in: FolderTypeProtocol?) throws -> URL","type":"method"},{"path":"\/documentation\/easycode\/localfilemanager\/image(withname:in:)","title":"func image(withName: String, in: FolderTypeProtocol?) throws -> UIImage?","type":"method"},{"path":"\/documentation\/easycode\/localfilemanager\/pdf(withname:)","title":"func pdf(withName: String) throws -> PDFDocument?","type":"method"},{"path":"\/documentation\/easycode\/localfilemanager\/removefile(withname:in:)","title":"func removeFile(withName: String, in: FolderTypeProtocol?) throws","type":"method"},{"path":"\/documentation\/easycode\/localfilemanager\/save(data:oftype:withname:in:)","title":"func save(data: Data, ofType: FileType, withName: String, in: FolderTypeProtocol?) throws","type":"method"},{"path":"\/documentation\/easycode\/localfilemanager\/video(withname:)","title":"func video(withName: String) throws -> AVAsset?","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/easycode\/localfilemanager\/filemanagererror\/directorynotfound","title":"case directoryNotFound","type":"case"},{"path":"\/documentation\/easycode\/localfilemanager\/filemanagererror\/invalidextension","title":"case invalidExtension","type":"case"},{"path":"\/documentation\/easycode\/localfilemanager\/filemanagererror\/missingextension","title":"case missingExtension","type":"case"},{"path":"\/documentation\/easycode\/localfilemanager\/filemanagererror\/notfound","title":"case notFound","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/easycode\/localfilemanager\/filemanagererror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/easycode\/localfilemanager\/filemanagererror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/localfilemanager\/filemanagererror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/easycode\/localfilemanager\/filemanagererror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/easycode\/localfilemanager\/filemanagererror","title":"LocalFileManager.FileManagerError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/easycode\/localfilemanager\/filetype\/image","title":"case image","type":"case"},{"path":"\/documentation\/easycode\/localfilemanager\/filetype\/pdf","title":"case pdf","type":"case"},{"path":"\/documentation\/easycode\/localfilemanager\/filetype\/video","title":"case video","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/easycode\/localfilemanager\/filetype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/easycode\/localfilemanager\/filetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/easycode\/localfilemanager\/filetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/localfilemanager\/filetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/localfilemanager\/filetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/easycode\/localfilemanager\/filetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/easycode\/localfilemanager\/filetype","title":"LocalFileManager.FileType","type":"enum"}],"path":"\/documentation\/easycode\/localfilemanager","title":"LocalFileManager","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/logger\/print(_:)-25kc7","title":"class func print(String)","type":"method"},{"path":"\/documentation\/easycode\/logger\/print(_:)-7dgkw","title":"class func print(() -> Void)","type":"method"},{"path":"\/documentation\/easycode\/logger\/printdivider()","title":"class func printDivider()","type":"method"}],"path":"\/documentation\/easycode\/logger","title":"Logger","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/measuretest\/measuretime(closure:)","title":"class func measureTime(closure: () -> Void)","type":"method"}],"path":"\/documentation\/easycode\/measuretest","title":"MeasureTest","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/easycode\/networkmanager\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/networkmanager\/certdataitems","title":"var certDataItems: [Data]","type":"property"},{"path":"\/documentation\/easycode\/networkmanager\/isneedtologrequests","title":"var isNeedToLogRequests: Bool","type":"property"},{"path":"\/documentation\/easycode\/networkmanager\/issslpinningenabled","title":"var isSSLPinningEnabled: Bool","type":"property"},{"path":"\/documentation\/easycode\/networkmanager\/session","title":"var session: URLSession","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/networkmanager\/multipart(_:isneedtoresumeimmediatly:with:completion:)","title":"func multiPart(EndPointProtocol, isNeedToResumeImmediatly: Bool, with: [MultipartFormDataParameter], completion: (NetworkResponseProtocol) -> Void) -> URLSessionDataTask?","type":"method"},{"path":"\/documentation\/easycode\/networkmanager\/multipart(_:with:)","title":"func multiPart(EndPointProtocol, with: [MultipartFormDataParameter]) async -> NetworkResponseProtocol?","type":"method"},{"path":"\/documentation\/easycode\/networkmanager\/request(_:)","title":"func request(EndPointProtocol) async -> NetworkResponseProtocol?","type":"method"},{"path":"\/documentation\/easycode\/networkmanager\/request(_:isneedtoresumeimmediatly:completion:)","title":"func request(EndPointProtocol, isNeedToResumeImmediatly: Bool, completion: (NetworkResponseProtocol) -> Void) -> URLSessionDataTask?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/networkmanager\/urlsession(_:didreceive:completionhandler:)","title":"func urlSession(URLSession, didReceive: URLAuthenticationChallenge, completionHandler: (URLSession.AuthChallengeDisposition, URLCredential?) -> Void)","type":"method"}],"path":"\/documentation\/easycode\/networkmanager\/urlsessiondelegate-implementations","title":"URLSessionDelegate Implementations","type":"symbol"}],"path":"\/documentation\/easycode\/networkmanager","title":"NetworkManager","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/easycode\/networkmonitor\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/networkmonitor\/delegate","title":"var delegate: NetworkMonitorDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/networkmonitor\/startmonitoring()","title":"func startMonitoring()","type":"method"},{"path":"\/documentation\/easycode\/networkmonitor\/stopmonitoring()","title":"func stopMonitoring()","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/easycode\/networkmonitor\/connectiontype\/cellular","title":"case cellular","type":"case"},{"path":"\/documentation\/easycode\/networkmonitor\/connectiontype\/ethernet","title":"case ethernet","type":"case"},{"path":"\/documentation\/easycode\/networkmonitor\/connectiontype\/unknown","title":"case unknown","type":"case"},{"path":"\/documentation\/easycode\/networkmonitor\/connectiontype\/wifi","title":"case wifi","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/easycode\/networkmonitor\/connectiontype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/easycode\/networkmonitor\/connectiontype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/easycode\/networkmonitor\/connectiontype","title":"NetworkMonitor.ConnectionType","type":"enum"}],"path":"\/documentation\/easycode\/networkmonitor","title":"NetworkMonitor","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/easycode\/notificationaction\/init(name:)","title":"init(name: Notification.Name)","type":"init"},{"path":"\/documentation\/easycode\/notificationaction\/init(rawvalue:)","title":"init(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/notificationaction\/name","title":"var name: Notification.Name","type":"property"},{"path":"\/documentation\/easycode\/notificationaction\/rawvalue-swift.property","title":"let rawValue: RawValue","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/easycode\/notificationaction\/rawvalue-swift.typealias","title":"NotificationAction.RawValue","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/notificationaction\/didbecomeactive","title":"static var didBecomeActive: NotificationAction","type":"property"},{"path":"\/documentation\/easycode\/notificationaction\/didenterbackground","title":"static var didEnterBackground: NotificationAction","type":"property"},{"path":"\/documentation\/easycode\/notificationaction\/didtakescreenshot","title":"static var didTakeScreenshot: NotificationAction","type":"property"},{"path":"\/documentation\/easycode\/notificationaction\/keyboardwillhide","title":"static var keyboardWillHide: NotificationAction","type":"property"},{"path":"\/documentation\/easycode\/notificationaction\/keyboardwillshow","title":"static var keyboardWillShow: NotificationAction","type":"property"},{"path":"\/documentation\/easycode\/notificationaction\/screencaptureddidchange","title":"static var screenCapturedDidChange: NotificationAction","type":"property"},{"path":"\/documentation\/easycode\/notificationaction\/willenterforeground","title":"static var willEnterForeground: NotificationAction","type":"property"},{"path":"\/documentation\/easycode\/notificationaction\/willresignactive","title":"static var willResignActive: NotificationAction","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/easycode\/notificationaction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/easycode\/notificationaction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/easycode\/notificationaction","title":"NotificationAction","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/easycode\/notificationmanager\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/notificationmanager\/delegate","title":"var delegate: NotificationManagerDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/notificationmanager\/subscribe(to:object:)","title":"func subscribe(to: NotificationAction, object: Any?)","type":"method"},{"path":"\/documentation\/easycode\/notificationmanager\/trigger(notification:object:userinfo:)","title":"func trigger(notification: NotificationAction, object: Any?, userInfo: [AnyHashable : Any]?)","type":"method"},{"path":"\/documentation\/easycode\/notificationmanager\/unsubscribe(from:object:)","title":"func unsubscribe(from: NotificationAction, object: Any?)","type":"method"}],"path":"\/documentation\/easycode\/notificationmanager","title":"NotificationManager","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/easycode\/observable\/init(_:)","title":"init(T)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/observable\/listener-swift.property","title":"var listener: Listener?","type":"property"},{"path":"\/documentation\/easycode\/observable\/value","title":"var value: T","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/observable\/bind(listener:)","title":"func bind(listener: Listener)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/easycode\/observable\/listener-swift.typealias","title":"Observable.Listener","type":"typealias"}],"path":"\/documentation\/easycode\/observable","title":"Observable","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/passwordvalidationfactory\/createstrategies(rules:)","title":"static func createStrategies(rules: [ValidationRule]) -> [PasswordValidationStrategy]","type":"method"}],"path":"\/documentation\/easycode\/passwordvalidationfactory","title":"PasswordValidationFactory","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/easycode\/passwordvalidator\/init(strategies:)","title":"init(strategies: [PasswordValidationStrategy])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/passwordvalidator\/isvalid(password:)","title":"func isValid(password: String) -> [ValidationRule : Bool]","type":"method"}],"path":"\/documentation\/easycode\/passwordvalidator","title":"PasswordValidator","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/easycode\/performmanager\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/performmanager\/tasks","title":"var tasks: [PerformManager.PerformTask]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/performmanager\/addtask(_:)","title":"func addTask(PerformTask)","type":"method"},{"path":"\/documentation\/easycode\/performmanager\/cancelalltasks()","title":"func cancelAllTasks()","type":"method"},{"path":"\/documentation\/easycode\/performmanager\/performtasks(insequence:completion:)","title":"func performTasks(inSequence: Bool, completion: (() -> Void)?)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/easycode\/performmanager\/performtask","title":"PerformManager.PerformTask","type":"typealias"}],"path":"\/documentation\/easycode\/performmanager","title":"PerformManager","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/easycode\/selfsizedtableview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/easycode\/selfsizedtableview\/init(frame:style:)","title":"init(frame: CGRect, style: UITableView.Style)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/selfsizedtableview\/intrinsiccontentsize","title":"var intrinsicContentSize: CGSize","type":"property"},{"path":"\/documentation\/easycode\/selfsizedtableview\/maxheight","title":"var maxHeight: CGFloat","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/selfsizedtableview\/reloaddata()","title":"func reloadData()","type":"method"}],"path":"\/documentation\/easycode\/selfsizedtableview","title":"SelfSizedTableView","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/temporaryimagecache\/clearcache()","title":"func clearCache()","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/easycode\/temporaryimagecache\/subscript(_:)","title":"subscript(String) -> UIImage?","type":"subscript"}],"path":"\/documentation\/easycode\/temporaryimagecache","title":"TemporaryImageCache","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/easycode\/threadsafe\/init(_:)","title":"init(T)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/threadsafe\/wrappedvalue","title":"var wrappedValue: T","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/threadsafe\/modify(_:)","title":"func modify((inout T) -> Void)","type":"method"},{"path":"\/documentation\/easycode\/threadsafe\/read(_:)","title":"func read<R>((T) -> R) -> R","type":"method"}],"path":"\/documentation\/easycode\/threadsafe","title":"ThreadSafe","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/easycode\/unmanagedwrapper\/init(_:)","title":"init(T)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/unmanagedwrapper\/getmanagedinstance()","title":"func getManagedInstance() -> T?","type":"method"},{"path":"\/documentation\/easycode\/unmanagedwrapper\/release()","title":"func release()","type":"method"},{"path":"\/documentation\/easycode\/unmanagedwrapper\/toopaque()","title":"func toOpaque() -> UnsafeMutableRawPointer?","type":"method"}],"path":"\/documentation\/easycode\/unmanagedwrapper","title":"UnmanagedWrapper","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/easycode\/userdefaultsstore\/init(userdefaults:)","title":"init(userDefaults: UserDefaults)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/userdefaultsstore\/getvalue(for:)-3aic5","title":"func getValue<T>(for: UserDefaultsStoreKey) -> T?","type":"method"},{"path":"\/documentation\/easycode\/userdefaultsstore\/getvalue(for:)-4xi0d","title":"func getValue<T>(for: UserDefaultsStoreKey) -> T?","type":"method"},{"path":"\/documentation\/easycode\/userdefaultsstore\/removevalue(for:)","title":"func removeValue(for: UserDefaultsStoreKey)","type":"method"},{"path":"\/documentation\/easycode\/userdefaultsstore\/set(value:for:)-24uaz","title":"func set<T>(value: T, for: UserDefaultsStoreKey)","type":"method"},{"path":"\/documentation\/easycode\/userdefaultsstore\/set(value:for:)-5nuen","title":"func set<T>(value: T, for: UserDefaultsStoreKey)","type":"method"},{"path":"\/documentation\/easycode\/userdefaultsstore\/sync()","title":"func sync()","type":"method"}],"path":"\/documentation\/easycode\/userdefaultsstore","title":"UserDefaultsStore","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/databasenameprotocol\/rawvalue","title":"var rawValue: String","type":"property"}],"path":"\/documentation\/easycode\/databasenameprotocol","title":"DataBaseNameProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/deviceinformation\/appname","title":"var appName: String?","type":"property"},{"path":"\/documentation\/easycode\/deviceinformation\/appversion","title":"var appVersion: String?","type":"property"},{"path":"\/documentation\/easycode\/deviceinformation\/batterylevel","title":"var batteryLevel: Float","type":"property"},{"path":"\/documentation\/easycode\/deviceinformation\/buildnumber","title":"var buildNumber: String?","type":"property"},{"path":"\/documentation\/easycode\/deviceinformation\/deviceid","title":"var deviceId: String?","type":"property"},{"path":"\/documentation\/easycode\/deviceinformation\/devicelocalizedmodel","title":"var deviceLocalizedModel: String","type":"property"},{"path":"\/documentation\/easycode\/deviceinformation\/devicemodel","title":"var deviceModel: String","type":"property"},{"path":"\/documentation\/easycode\/deviceinformation\/devicename","title":"var deviceName: String","type":"property"},{"path":"\/documentation\/easycode\/deviceinformation\/freediskspace","title":"var freeDiskSpace: String?","type":"property"},{"path":"\/documentation\/easycode\/deviceinformation\/isbatterymonitoringenabled","title":"var isBatteryMonitoringEnabled: Bool","type":"property"},{"path":"\/documentation\/easycode\/deviceinformation\/ismultitaskingsupported","title":"var isMultitaskingSupported: Bool","type":"property"},{"path":"\/documentation\/easycode\/deviceinformation\/preferredlanguage","title":"var preferredLanguage: String","type":"property"},{"path":"\/documentation\/easycode\/deviceinformation\/systemnamestring","title":"var systemNameString: String","type":"property"},{"path":"\/documentation\/easycode\/deviceinformation\/systemversionstring","title":"var systemVersionString: String","type":"property"},{"path":"\/documentation\/easycode\/deviceinformation\/totaldiskspace","title":"var totalDiskSpace: String?","type":"property"}],"path":"\/documentation\/easycode\/deviceinformation","title":"DeviceInformation","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/easycode\/encryptioncryptoprotocol\/md5(string:)-50230","title":"func MD5(string: String) -> String","type":"method"}],"title":"EncryptionCryptoProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/easycode\/encryptioncryptoprotocol\/md5(string:)-4xisz","title":"func MD5(string: String) -> String","type":"method"},{"children":[{"children":[{"path":"\/documentation\/easycode\/encryptioncryptoprotocol\/sha256(string:)-168o4","title":"func SHA256(string: String) -> String","type":"method"}],"title":"EncryptionCryptoProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/easycode\/encryptioncryptoprotocol\/sha256(string:)-2jmc3","title":"func SHA256(string: String) -> String","type":"method"},{"children":[{"children":[{"path":"\/documentation\/easycode\/encryptioncryptoprotocol\/decryptrsa(data:privatekey:)-zcun","title":"func decryptRSA(data: Data, privateKey: SecKey) throws -> Data","type":"method"}],"title":"EncryptionCryptoProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/easycode\/encryptioncryptoprotocol\/decryptrsa(data:privatekey:)-31hsq","title":"func decryptRSA(data: Data, privateKey: SecKey) throws -> Data","type":"method"},{"children":[{"children":[{"path":"\/documentation\/easycode\/encryptioncryptoprotocol\/decryptwithaes(data:key:)-10kji","title":"func decryptWithAES(data: Data, key: SymmetricKey) throws -> String","type":"method"}],"title":"EncryptionCryptoProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/easycode\/encryptioncryptoprotocol\/decryptwithaes(data:key:)-5p1ll","title":"func decryptWithAES(data: Data, key: SymmetricKey) throws -> String","type":"method"},{"children":[{"children":[{"path":"\/documentation\/easycode\/encryptioncryptoprotocol\/decryptwithchachapoly(data:key:)-8ix0f","title":"func decryptWithChaChaPoly(data: Data, key: SymmetricKey) throws -> String","type":"method"}],"title":"EncryptionCryptoProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/easycode\/encryptioncryptoprotocol\/decryptwithchachapoly(data:key:)-2x5d7","title":"func decryptWithChaChaPoly(data: Data, key: SymmetricKey) throws -> String","type":"method"},{"children":[{"children":[{"path":"\/documentation\/easycode\/encryptioncryptoprotocol\/encryptrsa(data:publickey:)-2dsvd","title":"func encryptRSA(data: Data, publicKey: SecKey) throws -> Data","type":"method"}],"title":"EncryptionCryptoProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/easycode\/encryptioncryptoprotocol\/encryptrsa(data:publickey:)-8cjdy","title":"func encryptRSA(data: Data, publicKey: SecKey) throws -> Data","type":"method"},{"children":[{"children":[{"path":"\/documentation\/easycode\/encryptioncryptoprotocol\/encryptwithaes(string:key:)-9mtxz","title":"func encryptWithAES(string: String, key: SymmetricKey) throws -> Data","type":"method"}],"title":"EncryptionCryptoProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/easycode\/encryptioncryptoprotocol\/encryptwithaes(string:key:)-dxor","title":"func encryptWithAES(string: String, key: SymmetricKey) throws -> Data","type":"method"},{"children":[{"children":[{"path":"\/documentation\/easycode\/encryptioncryptoprotocol\/encryptwithchachapoly(string:key:)-862lp","title":"func encryptWithChaChaPoly(string: String, key: SymmetricKey) throws -> Data","type":"method"}],"title":"EncryptionCryptoProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/easycode\/encryptioncryptoprotocol\/encryptwithchachapoly(string:key:)-3cq52","title":"func encryptWithChaChaPoly(string: String, key: SymmetricKey) throws -> Data","type":"method"},{"path":"\/documentation\/easycode\/encryptioncryptoprotocol\/randomnoncestring(length:)","title":"func randomNonceString(length: Int) -> String","type":"method"}],"path":"\/documentation\/easycode\/encryptioncryptoprotocol","title":"EncryptionCryptoProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/endpointprotocol\/baseurl","title":"var baseURL: String","type":"property"},{"path":"\/documentation\/easycode\/endpointprotocol\/cachepolicy","title":"var cachePolicy: URLRequest.CachePolicy","type":"property"},{"path":"\/documentation\/easycode\/endpointprotocol\/encoding","title":"var encoding: EncodingType","type":"property"},{"path":"\/documentation\/easycode\/endpointprotocol\/headers","title":"var headers: HTTPHeaders?","type":"property"},{"path":"\/documentation\/easycode\/endpointprotocol\/httpmethod","title":"var httpMethod: HTTPMethod","type":"property"},{"path":"\/documentation\/easycode\/endpointprotocol\/parameters","title":"var parameters: Parameters?","type":"property"},{"path":"\/documentation\/easycode\/endpointprotocol\/path","title":"var path: String","type":"property"},{"path":"\/documentation\/easycode\/endpointprotocol\/timeoutinterval","title":"var timeoutInterval: TimeInterval","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/endpointprotocol\/encode(_:)","title":"func encode<T>(T) -> Any?","type":"method"},{"children":[{"children":[{"path":"\/documentation\/easycode\/endpointprotocol\/makerequest()-31q4f","title":"func makeRequest() -> URLRequest?","type":"method"}],"title":"EndPointProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/easycode\/endpointprotocol\/makerequest()-20vfb","title":"func makeRequest() -> URLRequest?","type":"method"}],"path":"\/documentation\/easycode\/endpointprotocol","title":"EndPointProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/foldertypeprotocol\/rawvalue","title":"var rawValue: String","type":"property"}],"path":"\/documentation\/easycode\/foldertypeprotocol","title":"FolderTypeProtocol","type":"protocol"},{"children":[{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/easycode\/imagecache\/subscript(_:)","title":"subscript(String) -> UIImage?","type":"subscript"}],"path":"\/documentation\/easycode\/imagecache","title":"ImageCache","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/jailbreakdetectionservice\/isjailbrokendevice","title":"var isJailbrokenDevice: Bool","type":"property"}],"path":"\/documentation\/easycode\/jailbreakdetectionservice","title":"JailbreakDetectionService","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/keyboardnotificationprotocol\/notificationmanager","title":"var notificationManager: NotificationManager","type":"property"},{"path":"\/documentation\/easycode\/keyboardnotificationprotocol\/scrollview","title":"var scrollView: UIScrollView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/easycode\/keyboardnotificationprotocol\/subscribeforkeyboardnotifications()-66c5f","title":"func subscribeForKeyboardNotifications()","type":"method"}],"title":"KeyboardNotificationProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/easycode\/keyboardnotificationprotocol\/subscribeforkeyboardnotifications()-wivx","title":"func subscribeForKeyboardNotifications()","type":"method"},{"children":[{"children":[{"path":"\/documentation\/easycode\/keyboardnotificationprotocol\/unsubscribefromkeyboardnotifications()-29fgv","title":"func unsubscribeFromKeyboardNotifications()","type":"method"}],"title":"KeyboardNotificationProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/easycode\/keyboardnotificationprotocol\/unsubscribefromkeyboardnotifications()-2o8nt","title":"func unsubscribeFromKeyboardNotifications()","type":"method"}],"path":"\/documentation\/easycode\/keyboardnotificationprotocol","title":"KeyboardNotificationProtocol","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/keychainkeyprotocol\/rawvalue","title":"var rawValue: String","type":"property"}],"path":"\/documentation\/easycode\/keychainkeyprotocol","title":"KeychainKeyProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/networkmonitordelegate\/networkmonitor(_:didchangestatusto:)","title":"func networkMonitor(NetworkMonitor, didChangeStatusTo: Bool)","type":"method"}],"path":"\/documentation\/easycode\/networkmonitordelegate","title":"NetworkMonitorDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/networkresponseprotocol\/data","title":"var data: Data?","type":"property"},{"path":"\/documentation\/easycode\/networkresponseprotocol\/error","title":"var error: NetworkError?","type":"property"},{"path":"\/documentation\/easycode\/networkresponseprotocol\/headers","title":"var headers: [AnyHashable : Any]?","type":"property"},{"path":"\/documentation\/easycode\/networkresponseprotocol\/json","title":"var json: [String : Any]?","type":"property"},{"path":"\/documentation\/easycode\/networkresponseprotocol\/statuscode","title":"var statusCode: Int","type":"property"},{"path":"\/documentation\/easycode\/networkresponseprotocol\/string","title":"var string: String?","type":"property"},{"children":[{"children":[{"path":"\/documentation\/easycode\/networkresponseprotocol\/success-4wzc8","title":"var success: Bool","type":"property"}],"title":"NetworkResponseProtocol Implementations","type":"groupMarker"}],"path":"\/documentation\/easycode\/networkresponseprotocol\/success-67dwa","title":"var success: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/networkresponseprotocol\/decode()","title":"func decode<T>() -> T?","type":"method"}],"path":"\/documentation\/easycode\/networkresponseprotocol","title":"NetworkResponseProtocol","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/easycode\/notificationmanagerdelegate\/performontrigger(_:object:userinfo:)-3fr9a","title":"func performOnTrigger(NotificationAction, object: Any?, userInfo: [AnyHashable : Any]?)","type":"method"}],"title":"NotificationManagerDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/easycode\/notificationmanagerdelegate\/performontrigger(_:object:userinfo:)-4gbjp","title":"func performOnTrigger(NotificationAction, object: Any?, userInfo: [AnyHashable : Any]?)","type":"method"}],"path":"\/documentation\/easycode\/notificationmanagerdelegate","title":"NotificationManagerDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/passwordvalidationstrategy\/rule","title":"var rule: ValidationRule","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/passwordvalidationstrategy\/isvalid(password:)","title":"func isValid(password: String) -> Bool","type":"method"}],"path":"\/documentation\/easycode\/passwordvalidationstrategy","title":"PasswordValidationStrategy","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/userdefaultsstorekey\/rawvalue","title":"var rawValue: String","type":"property"}],"path":"\/documentation\/easycode\/userdefaultsstorekey","title":"UserDefaultsStoreKey","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/mailconfiguration\/isbodyhtml","title":"var isBodyHtml: Bool","type":"property"},{"path":"\/documentation\/easycode\/mailconfiguration\/messagebody","title":"var messageBody: String","type":"property"},{"path":"\/documentation\/easycode\/mailconfiguration\/recipients","title":"var recipients: [String]","type":"property"},{"path":"\/documentation\/easycode\/mailconfiguration\/subject","title":"var subject: String","type":"property"}],"path":"\/documentation\/easycode\/mailconfiguration","title":"MailConfiguration","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/easycode\/regularexpression\/init(regex:)","title":"init(regex: NSRegularExpression)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/regularexpression\/firstmatch(in:options:subgroupposition:)","title":"func firstMatch(in: String, options: NSRegularExpression.MatchingOptions, subgroupPosition: Int) -> String?","type":"method"},{"path":"\/documentation\/easycode\/regularexpression\/matches(in:options:)","title":"func matches(in: String, options: NSRegularExpression.MatchingOptions) -> [NSTextCheckingResult]","type":"method"},{"path":"\/documentation\/easycode\/regularexpression\/replacematches(in:with:options:)","title":"func replaceMatches(in: String, with: String, options: NSRegularExpression.MatchingOptions) -> String","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/easycode\/regularexpression\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/easycode\/regularexpression\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/easycode\/regularexpression\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"}],"path":"\/documentation\/easycode\/regularexpression\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/easycode\/regularexpression\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/easycode\/regularexpression\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/easycode\/regularexpression","title":"RegularExpression","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/easycode\/httpheaders","title":"HTTPHeaders","type":"typealias"},{"path":"\/documentation\/easycode\/multipartformdataparameter","title":"MultipartFormDataParameter","type":"typealias"},{"path":"\/documentation\/easycode\/parameters","title":"Parameters","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/easycode\/encodingtype\/json","title":"case json","type":"case"},{"path":"\/documentation\/easycode\/encodingtype\/none","title":"case none","type":"case"},{"path":"\/documentation\/easycode\/encodingtype\/url","title":"case url","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/easycode\/encodingtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/easycode\/encodingtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/easycode\/encodingtype","title":"EncodingType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/easycode\/encryptionerror\/alreadyexists","title":"case alreadyExists","type":"case"},{"path":"\/documentation\/easycode\/encryptionerror\/decryptionfailed","title":"case decryptionFailed","type":"case"},{"path":"\/documentation\/easycode\/encryptionerror\/keychainerror(status:)","title":"case keychainError(status: OSStatus)","type":"case"},{"path":"\/documentation\/easycode\/encryptionerror\/passwordmismatch","title":"case passwordMismatch","type":"case"},{"path":"\/documentation\/easycode\/encryptionerror\/unexpecteddata","title":"case unexpectedData","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/encryptionerror\/debugdescription","title":"var debugDescription: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/encryptionerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/easycode\/encryptionerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/easycode\/encryptionerror","title":"EncryptionError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/easycode\/httpmethod\/delete","title":"case delete","type":"case"},{"path":"\/documentation\/easycode\/httpmethod\/get","title":"case get","type":"case"},{"path":"\/documentation\/easycode\/httpmethod\/head","title":"case head","type":"case"},{"path":"\/documentation\/easycode\/httpmethod\/patch","title":"case patch","type":"case"},{"path":"\/documentation\/easycode\/httpmethod\/post","title":"case post","type":"case"},{"path":"\/documentation\/easycode\/httpmethod\/put","title":"case put","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/easycode\/httpmethod\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/easycode\/httpmethod\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/easycode\/httpmethod\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/httpmethod\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/httpmethod\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/easycode\/httpmethod\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/easycode\/httpmethod","title":"HTTPMethod","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/easycode\/imagefilter\/blackandwhite","title":"case blackAndWhite","type":"case"},{"path":"\/documentation\/easycode\/imagefilter\/blur(_:)","title":"case blur(CGFloat)","type":"case"},{"path":"\/documentation\/easycode\/imagefilter\/colorinvert","title":"case colorInvert","type":"case"},{"path":"\/documentation\/easycode\/imagefilter\/contrastadjustment(_:)","title":"case contrastAdjustment(CGFloat)","type":"case"},{"path":"\/documentation\/easycode\/imagefilter\/cooltone","title":"case coolTone","type":"case"},{"path":"\/documentation\/easycode\/imagefilter\/graineffect(_:)","title":"case grainEffect(CGFloat)","type":"case"},{"path":"\/documentation\/easycode\/imagefilter\/hueadjustment(_:)","title":"case hueAdjustment(CGFloat)","type":"case"},{"path":"\/documentation\/easycode\/imagefilter\/motionblur(_:)","title":"case motionBlur(CGFloat)","type":"case"},{"path":"\/documentation\/easycode\/imagefilter\/qrcode(type:scalex:scaley:)","title":"case qrCode(type: QRType, scaleX: CGFloat, scaleY: CGFloat)","type":"case"},{"path":"\/documentation\/easycode\/imagefilter\/saturationadjustment(_:)","title":"case saturationAdjustment(CGFloat)","type":"case"},{"path":"\/documentation\/easycode\/imagefilter\/sepiatone(_:)","title":"case sepiaTone(CGFloat)","type":"case"},{"path":"\/documentation\/easycode\/imagefilter\/vignetteeffect(_:)","title":"case vignetteEffect(CGFloat)","type":"case"},{"path":"\/documentation\/easycode\/imagefilter\/warmtone","title":"case warmTone","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/imagefilter\/apply(to:)","title":"func apply(to: UIImage) -> UIImage?","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/easycode\/imagefilter\/qrtype\/string(text:)","title":"case string(text: String)","type":"case"},{"path":"\/documentation\/easycode\/imagefilter\/qrtype\/url(url:)","title":"case url(url: String)","type":"case"}],"path":"\/documentation\/easycode\/imagefilter\/qrtype","title":"ImageFilter.QRType","type":"enum"}],"path":"\/documentation\/easycode\/imagefilter","title":"ImageFilter","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/easycode\/networkerror\/badrequest","title":"case badRequest","type":"case"},{"path":"\/documentation\/easycode\/networkerror\/badresponse","title":"case badResponse","type":"case"},{"path":"\/documentation\/easycode\/networkerror\/badurl","title":"case badUrl","type":"case"},{"path":"\/documentation\/easycode\/networkerror\/copyerror","title":"case copyError","type":"case"},{"path":"\/documentation\/easycode\/networkerror\/encodingfail","title":"case encodingFail","type":"case"},{"path":"\/documentation\/easycode\/networkerror\/genericerror(_:)","title":"case genericError(String)","type":"case"},{"path":"\/documentation\/easycode\/networkerror\/nodata","title":"case noData","type":"case"},{"path":"\/documentation\/easycode\/networkerror\/parametersnil","title":"case parametersNil","type":"case"},{"path":"\/documentation\/easycode\/networkerror\/parseerror","title":"case parseError","type":"case"},{"path":"\/documentation\/easycode\/networkerror\/servererror","title":"case serverError","type":"case"},{"path":"\/documentation\/easycode\/networkerror\/unauthorizedlocationaccess","title":"case unauthorizedLocationAccess","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/networkerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/easycode\/networkerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/easycode\/networkerror","title":"NetworkError","type":"enum"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/easycode\/validationrule\/==(_:_:)","title":"static func == (ValidationRule, ValidationRule) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/easycode\/validationrule\/custom(name:_:)","title":"case custom(name: String, (String) -> Bool)","type":"case"},{"path":"\/documentation\/easycode\/validationrule\/digit","title":"case digit","type":"case"},{"path":"\/documentation\/easycode\/validationrule\/latincharacters","title":"case latinCharacters","type":"case"},{"path":"\/documentation\/easycode\/validationrule\/minlength(minlength:)","title":"case minLength(minLength: Int)","type":"case"},{"path":"\/documentation\/easycode\/validationrule\/specialcharacters(characters:count:)","title":"case specialCharacters(characters: String, count: Int)","type":"case"},{"path":"\/documentation\/easycode\/validationrule\/uppercase","title":"case uppercase","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/validationrule\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/easycode\/validationrule\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/easycode\/validationrule\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/easycode\/validationrule","title":"ValidationRule","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Classes","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/avfoundation\/avcapturedevice\/settorchmode(_:)","title":"static func setTorchMode(AVCaptureDevice.TorchMode)","type":"method"}],"path":"\/documentation\/easycode\/avfoundation\/avcapturedevice","title":"AVCaptureDevice","type":"extension"}],"path":"\/documentation\/easycode\/avfoundation","title":"AVFoundation","type":"extension"},{"children":[{"title":"Extended Classes","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/foundation\/bundle\/sslcertificates","title":"var SSLCertificates: [Data]","type":"property"}],"path":"\/documentation\/easycode\/foundation\/bundle","title":"Bundle","type":"extension"},{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/foundation\/data\/dictionary","title":"var dictionary: [String : Any]?","type":"property"},{"path":"\/documentation\/easycode\/foundation\/data\/hexstring","title":"var hexString: String","type":"property"},{"path":"\/documentation\/easycode\/foundation\/data\/jsonstring","title":"var jsonString: String","type":"property"},{"path":"\/documentation\/easycode\/foundation\/data\/mimetype","title":"var mimeType: String","type":"property"},{"path":"\/documentation\/easycode\/foundation\/data\/sizestring","title":"var sizeString: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/foundation\/data\/append(_:)","title":"func append(String)","type":"method"}],"path":"\/documentation\/easycode\/foundation\/data","title":"Data","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/foundation\/date\/calendar","title":"var calendar: Calendar","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/foundation\/date\/changing(_:value:)","title":"func changing(Calendar.Component, value: Int) -> Date?","type":"method"},{"path":"\/documentation\/easycode\/foundation\/date\/isequal(to:)","title":"func isEqual(to: Date) -> Bool","type":"method"},{"path":"\/documentation\/easycode\/foundation\/date\/string(withformat:locale:)","title":"func string(withFormat: Date.Format, locale: Locale) -> String","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/easycode\/foundation\/date\/format\/mmddyyyy(separator:time:)","title":"case MMddyyyy(separator: String, time: Time?)","type":"case"},{"path":"\/documentation\/easycode\/foundation\/date\/format\/mmyy(separator:time:)","title":"case MMyy(separator: String, time: Time?)","type":"case"},{"path":"\/documentation\/easycode\/foundation\/date\/format\/dmmmm(separator:time:)","title":"case dMMMM(separator: String, time: Time?)","type":"case"},{"path":"\/documentation\/easycode\/foundation\/date\/format\/dmmmmyyyy(separator:time:)","title":"case dMMMMyyyy(separator: String, time: Time?)","type":"case"},{"path":"\/documentation\/easycode\/foundation\/date\/format\/ddmmmmyyyy(separator:time:)","title":"case ddMMMMyyyy(separator: String, time: Time?)","type":"case"},{"path":"\/documentation\/easycode\/foundation\/date\/format\/ddmmyyyy(separator:time:)","title":"case ddMMyyyy(separator: String, time: Time?)","type":"case"},{"path":"\/documentation\/easycode\/foundation\/date\/format\/yymm(separator:time:)","title":"case yyMM(separator: String, time: Time?)","type":"case"},{"path":"\/documentation\/easycode\/foundation\/date\/format\/yyyymmdd(separator:time:)","title":"case yyyyMMdd(separator: String, time: Time?)","type":"case"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/easycode\/foundation\/date\/format\/time\/full(separator:)","title":"case full(separator: String)","type":"case"},{"path":"\/documentation\/easycode\/foundation\/date\/format\/time\/fullmilliseconds","title":"case fullMilliseconds","type":"case"},{"path":"\/documentation\/easycode\/foundation\/date\/format\/time\/fullmillisecondstimezone","title":"case fullMillisecondsTimeZone","type":"case"},{"path":"\/documentation\/easycode\/foundation\/date\/format\/time\/fulltimezone","title":"case fullTimeZone","type":"case"}],"path":"\/documentation\/easycode\/foundation\/date\/format\/time","title":"Date.Format.Time","type":"enum"}],"path":"\/documentation\/easycode\/foundation\/date\/format","title":"Date.Format","type":"enum"}],"path":"\/documentation\/easycode\/foundation\/date","title":"Date","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/foundation\/decimal\/percent","title":"var percent: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/foundation\/decimal\/getdisplayedamount(minimumfractiondigits:maximumfractiondigits:decimalseparator:groupingseparator:)","title":"func getDisplayedAmount(minimumFractionDigits: Int, maximumFractionDigits: Int, decimalSeparator: String, groupingSeparator: String) -> String?","type":"method"},{"path":"\/documentation\/easycode\/foundation\/decimal\/round(toplaces:)","title":"func round(toPlaces: Int) -> Decimal","type":"method"}],"path":"\/documentation\/easycode\/foundation\/decimal","title":"Decimal","type":"extension"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/foundation\/locale\/posix","title":"static var posix: Locale","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/foundation\/locale\/countryflag(country:)","title":"static func countryFlag(country: String) -> String","type":"method"},{"path":"\/documentation\/easycode\/foundation\/locale\/flagemoji(forregioncode:)","title":"static func flagEmoji(forRegionCode: String) -> String?","type":"method"},{"path":"\/documentation\/easycode\/foundation\/locale\/listofcountries(localeidentifier:)","title":"static func listOfCountries(localeIdentifier: String) -> [String]","type":"method"}],"path":"\/documentation\/easycode\/foundation\/locale","title":"Locale","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/foundation\/url\/queryparameters","title":"var queryParameters: [String : String]?","type":"property"},{"path":"\/documentation\/easycode\/foundation\/url\/sizestring","title":"var sizeString: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/foundation\/url\/appendingqueryparameters(_:)-5os6h","title":"func appendingQueryParameters([URLQueryItem]) -> URL?","type":"method"},{"path":"\/documentation\/easycode\/foundation\/url\/appendingqueryparameters(_:)-98ppq","title":"func appendingQueryParameters([String : String]) -> URL?","type":"method"},{"path":"\/documentation\/easycode\/foundation\/url\/droppedscheme()","title":"func droppedScheme() -> URL?","type":"method"},{"path":"\/documentation\/easycode\/foundation\/url\/queryvalue(for:)","title":"func queryValue(for: String) -> String?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/easycode\/foundation\/url\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/easycode\/foundation\/url\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/easycode\/foundation\/url\/init(stringliteral:)","title":"init(stringLiteral: String)","type":"init"}],"path":"\/documentation\/easycode\/foundation\/url\/expressiblebystringliteral-implementations","title":"ExpressibleByStringLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/easycode\/foundation\/url\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/easycode\/foundation\/url\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"}],"path":"\/documentation\/easycode\/foundation\/url","title":"URL","type":"extension"}],"path":"\/documentation\/easycode\/foundation","title":"Foundation","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/naturallanguage\/nllanguage\/languagecode","title":"var languageCode: String","type":"property"},{"path":"\/documentation\/easycode\/naturallanguage\/nllanguage\/stringvalue","title":"var stringValue: String","type":"property"}],"path":"\/documentation\/easycode\/naturallanguage\/nllanguage","title":"NLLanguage","type":"extension"}],"path":"\/documentation\/easycode\/naturallanguage","title":"NaturalLanguage","type":"extension"},{"children":[{"title":"Extended Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/swift\/binaryfloatingpoint\/rounded(numberofdecimalplaces:rule:)","title":"func rounded(numberOfDecimalPlaces: Int, rule: FloatingPointRoundingRule) -> Self","type":"method"}],"path":"\/documentation\/easycode\/swift\/binaryfloatingpoint","title":"BinaryFloatingPoint","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/swift\/encodable\/encode()","title":"func encode() -> [String : Any]?","type":"method"}],"path":"\/documentation\/easycode\/swift\/encodable","title":"Encodable","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/swift\/sequence\/unique","title":"var unique: [Element]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/swift\/sequence\/uniqued(on:)","title":"func uniqued<T>(on: KeyPath<Element, T>) -> [Element]","type":"method"}],"path":"\/documentation\/easycode\/swift\/sequence","title":"Sequence","type":"extension"},{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/swift\/array\/difference(from:)","title":"func difference(from: [Element]) -> [Element]","type":"method"},{"path":"\/documentation\/easycode\/swift\/array\/flattenarray()","title":"func flattenArray() -> [Any]","type":"method"},{"path":"\/documentation\/easycode\/swift\/array\/grouped(by:)","title":"func grouped<T>(by: KeyPath<Element, T>) -> [T : [Element]]","type":"method"},{"path":"\/documentation\/easycode\/swift\/array\/indexes(of:)","title":"func indexes(of: Element) -> [Int]","type":"method"},{"path":"\/documentation\/easycode\/swift\/array\/max(count:)","title":"func max(count: Int) -> [Element]?","type":"method"},{"path":"\/documentation\/easycode\/swift\/array\/mean()","title":"func mean() -> Double","type":"method"},{"path":"\/documentation\/easycode\/swift\/array\/median()","title":"func median() -> Double","type":"method"},{"path":"\/documentation\/easycode\/swift\/array\/min(count:)","title":"func min(count: Int) -> [Element]?","type":"method"},{"path":"\/documentation\/easycode\/swift\/array\/nonniljoined(separator:)","title":"func nonNilJoined(separator: String) -> String","type":"method"},{"path":"\/documentation\/easycode\/swift\/array\/slice(safe:)","title":"func slice(safe: Range<Int>) -> [Element]","type":"method"},{"path":"\/documentation\/easycode\/swift\/array\/todictionary(keypath:)","title":"func toDictionary<T>(keyPath: KeyPath<Element, T>) -> [T : Element]","type":"method"},{"path":"\/documentation\/easycode\/swift\/array\/updateall(where:with:)","title":"func updateAll(where: (Element) -> Bool, with: (inout Element) -> Void) -> [Element]","type":"method"},{"path":"\/documentation\/easycode\/swift\/array\/updatefirst(where:with:)","title":"func updateFirst(where: (Element) -> Bool, with: (inout Element) -> Void) -> [Element]","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/easycode\/swift\/array\/subscript(safe:)","title":"subscript(safe _: Int) -> Element?","type":"subscript"}],"path":"\/documentation\/easycode\/swift\/array","title":"Array","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/swift\/character\/isemoji","title":"var isEmoji: Bool","type":"property"}],"path":"\/documentation\/easycode\/swift\/character","title":"Character","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/swift\/dictionary\/prettystring","title":"var prettyString: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/swift\/dictionary\/compactmapvalues(_:)","title":"func compactMapValues<T>((Value) -> T?) -> [Key : T]","type":"method"},{"path":"\/documentation\/easycode\/swift\/dictionary\/decode()","title":"func decode<T>() -> T?","type":"method"},{"path":"\/documentation\/easycode\/swift\/dictionary\/filterkeys(_:)","title":"func filterKeys((Key) -> Bool) -> [Key : Value]","type":"method"},{"path":"\/documentation\/easycode\/swift\/dictionary\/filteredvalues(predicate:)","title":"func filteredValues(predicate: (Value) -> Bool) -> [Key : Value]","type":"method"},{"path":"\/documentation\/easycode\/swift\/dictionary\/has(key:)","title":"func has(key: Key) -> Bool","type":"method"},{"path":"\/documentation\/easycode\/swift\/dictionary\/keys(forvaluesmatching:)","title":"func keys(forValuesMatching: (Value) -> Bool) -> [Key]","type":"method"},{"path":"\/documentation\/easycode\/swift\/dictionary\/mapvalues(_:)","title":"func mapValues<T>((Value) -> T) -> [Key : T]","type":"method"},{"path":"\/documentation\/easycode\/swift\/dictionary\/merge(with:)","title":"func merge(with: [Key : Value]) -> [Key : Value]","type":"method"},{"path":"\/documentation\/easycode\/swift\/dictionary\/subdictionary(with:)","title":"func subdictionary(with: [Key]) -> [Key : Value]","type":"method"},{"path":"\/documentation\/easycode\/swift\/dictionary\/toarray()","title":"func toArray() -> [(Key, Value)]","type":"method"},{"path":"\/documentation\/easycode\/swift\/dictionary\/toarray(filter:)","title":"func toArray(filter: (Element) throws -> Bool) rethrows -> [(Key, Value)]","type":"method"}],"path":"\/documentation\/easycode\/swift\/dictionary","title":"Dictionary","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/swift\/double\/string","title":"var string: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/swift\/double\/tostring(_:)","title":"func toString(Int) -> String","type":"method"}],"path":"\/documentation\/easycode\/swift\/double","title":"Double","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/swift\/float\/string","title":"var string: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/swift\/float\/tostring(_:)","title":"func toString(Int) -> String","type":"method"}],"path":"\/documentation\/easycode\/swift\/float","title":"Float","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/swift\/int\/string","title":"var string: String","type":"property"}],"path":"\/documentation\/easycode\/swift\/int","title":"Int","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/swift\/string\/md5","title":"var MD5: String","type":"property"},{"path":"\/documentation\/easycode\/swift\/string\/sha256","title":"var SHA256: String","type":"property"},{"path":"\/documentation\/easycode\/swift\/string\/attributed","title":"var attributed: NSAttributedString","type":"property"},{"path":"\/documentation\/easycode\/swift\/string\/base64decoded","title":"var base64Decoded: String?","type":"property"},{"path":"\/documentation\/easycode\/swift\/string\/base64encoded","title":"var base64Encoded: String?","type":"property"},{"path":"\/documentation\/easycode\/swift\/string\/camelcasefromsnakecase","title":"var camelCaseFromSnakeCase: String","type":"property"},{"path":"\/documentation\/easycode\/swift\/string\/containsonlyletters","title":"var containsOnlyLetters: Bool","type":"property"},{"path":"\/documentation\/easycode\/swift\/string\/hascontent","title":"var hasContent: Bool","type":"property"},{"path":"\/documentation\/easycode\/swift\/string\/int","title":"var int: Int?","type":"property"},{"path":"\/documentation\/easycode\/swift\/string\/islatin","title":"var isLatin: Bool","type":"property"},{"path":"\/documentation\/easycode\/swift\/string\/isnumber","title":"var isNumber: Bool","type":"property"},{"path":"\/documentation\/easycode\/swift\/string\/isvalidemail","title":"var isValidEmail: Bool","type":"property"},{"path":"\/documentation\/easycode\/swift\/string\/language","title":"var language: NLLanguage?","type":"property"},{"path":"\/documentation\/easycode\/swift\/string\/languages","title":"var languages: [NLLanguage : Double]","type":"property"},{"path":"\/documentation\/easycode\/swift\/string\/localized","title":"var localized: String","type":"property"},{"path":"\/documentation\/easycode\/swift\/string\/nsrange","title":"var nsRange: NSRange","type":"property"},{"path":"\/documentation\/easycode\/swift\/string\/snakecasefromcamelcase","title":"var snakeCaseFromCamelCase: String","type":"property"},{"path":"\/documentation\/easycode\/swift\/string\/wholerange","title":"var wholeRange: Range<String.Index>","type":"property"},{"path":"\/documentation\/easycode\/swift\/string\/words","title":"var words: [String]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/swift\/string\/capitalizingfirstletter()","title":"func capitalizingFirstLetter() -> String","type":"method"},{"path":"\/documentation\/easycode\/swift\/string\/decode()","title":"func decode<T>() -> T?","type":"method"},{"path":"\/documentation\/easycode\/swift\/string\/drop(prefix:)","title":"func drop(prefix: String) -> String","type":"method"},{"path":"\/documentation\/easycode\/swift\/string\/drop(suffix:)","title":"func drop(suffix: String) -> String","type":"method"},{"path":"\/documentation\/easycode\/swift\/string\/image(with:font:renderingmode:)","title":"func image(with: CGSize, font: UIFont, renderingMode: UIImage.RenderingMode) -> UIImage","type":"method"},{"path":"\/documentation\/easycode\/swift\/string\/matches(_:)","title":"func matches(String) -> Bool","type":"method"},{"path":"\/documentation\/easycode\/swift\/string\/slice(from:length:)","title":"func slice(from: Int, length: Int) -> String","type":"method"},{"path":"\/documentation\/easycode\/swift\/string\/slicing(from:length:)","title":"func slicing(from: Int, length: Int) -> String?","type":"method"},{"path":"\/documentation\/easycode\/swift\/string\/truncate(tolength:trailing:)","title":"func truncate(toLength: Int, trailing: String?) -> String","type":"method"},{"path":"\/documentation\/easycode\/swift\/string\/truncated(tolength:trailing:)","title":"func truncated(toLength: Int, trailing: String?) -> String","type":"method"},{"path":"\/documentation\/easycode\/swift\/string\/versioncompare(_:)","title":"func versionCompare(String) -> ComparisonResult","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/easycode\/swift\/string\/subscript(safe:)-2x2j","title":"subscript(safe _: ClosedRange<Int>) -> String?","type":"subscript"},{"path":"\/documentation\/easycode\/swift\/string\/subscript(safe:)-32iho","title":"subscript(safe _: Int) -> Character?","type":"subscript"},{"path":"\/documentation\/easycode\/swift\/string\/subscript(safe:)-36b74","title":"subscript(safe _: Range<Int>) -> String?","type":"subscript"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/swift\/string\/loremipsum(oflength:)","title":"static func loremIpsum(ofLength: Int) -> String","type":"method"}],"path":"\/documentation\/easycode\/swift\/string","title":"String","type":"extension"}],"path":"\/documentation\/easycode\/swift","title":"Swift","type":"extension"},{"children":[{"title":"Extended Classes","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/uikit\/nslayoutconstraint\/activate()","title":"func activate() -> NSLayoutConstraint","type":"method"},{"path":"\/documentation\/easycode\/uikit\/nslayoutconstraint\/deactivate()","title":"func deactivate() -> NSLayoutConstraint","type":"method"}],"path":"\/documentation\/easycode\/uikit\/nslayoutconstraint","title":"NSLayoutConstraint","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/uikit\/uicollectionview\/dequeuereusablecell(for:)","title":"func dequeueReusableCell<T>(for: IndexPath) -> T","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uicollectionview\/dequeuereusablesupplementaryview(ofkind:for:)","title":"func dequeueReusableSupplementaryView<T>(ofKind: String, for: IndexPath) -> T","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uicollectionview\/register(_:)","title":"func register<T>(T.Type)","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uicollectionview\/register(_:forsupplementaryviewofkind:)","title":"func register<T>(T.Type, forSupplementaryViewOfKind: String)","type":"method"}],"path":"\/documentation\/easycode\/uikit\/uicollectionview","title":"UICollectionView","type":"extension"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/easycode\/uikit\/uicolor\/init(hex:)","title":"init(hex: String)","type":"init"},{"path":"\/documentation\/easycode\/uikit\/uicolor\/init(rgb:alpha:)","title":"init(rgb: UInt8..., alpha: UInt)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/uikit\/uicolor\/bg_black","title":"static var bg_black: UIColor","type":"property"},{"path":"\/documentation\/easycode\/uikit\/uicolor\/bg_primary","title":"static var bg_primary: UIColor","type":"property"},{"path":"\/documentation\/easycode\/uikit\/uicolor\/sys_green","title":"static var sys_green: UIColor","type":"property"},{"path":"\/documentation\/easycode\/uikit\/uicolor\/sys_grey","title":"static var sys_grey: UIColor","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/uikit\/uicolor\/makedynamiccolor(light:dark:)","title":"static func makeDynamicColor(light: UIColor, dark: UIColor) -> UIColor","type":"method"}],"path":"\/documentation\/easycode\/uikit\/uicolor","title":"UIColor","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/uikit\/uiimage\/jpegsizestring","title":"var jpegSizeString: String?","type":"property"},{"path":"\/documentation\/easycode\/uikit\/uiimage\/pngsizestring","title":"var pngSizeString: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/uikit\/uiimage\/addfilter(filter:)","title":"func addFilter(filter: String) -> UIImage?","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uiimage\/centered(in:)","title":"func centered(in: CGSize) -> UIImage","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uiimage\/fitthencenter(in:)","title":"func fitThenCenter(in: CGSize) -> UIImage","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uiimage\/fitted(in:)","title":"func fitted(in: CGSize) -> UIImage","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uiimage\/resized(to:)","title":"func resized(to: CGSize) -> UIImage","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/easycode\/uikit\/uiimage\/subscript(x:y:)","title":"subscript(x _: Int, y _: Int) -> UIColor?","type":"subscript"}],"path":"\/documentation\/easycode\/uikit\/uiimage","title":"UIImage","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/uikit\/uitableview\/dequeuereusablecell(for:)","title":"func dequeueReusableCell<T>(for: IndexPath) -> T","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uitableview\/dequeuereusableheaderfooter()","title":"func dequeueReusableHeaderFooter<T>() -> T","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uitableview\/register(_:)-3z6jp","title":"func register<T>(T.Type)","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uitableview\/register(_:)-4mng0","title":"func register<T>(T.Type)","type":"method"}],"path":"\/documentation\/easycode\/uikit\/uitableview","title":"UITableView","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/uikit\/uiview\/asimage","title":"var asImage: UIImage","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/uikit\/uiview\/activateconstraint(relatedto:attribute:)","title":"func activateConstraint(relatedTo: UIView, attribute: NSLayoutConstraint.Attribute)","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uiview\/addborder(width:color:)","title":"func addBorder(width: CGFloat, color: UIColor)","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uiview\/addgradient(colors:locations:startpoint:endpoint:)","title":"func addGradient(colors: [UIColor], locations: [NSNumber]?, startPoint: CGPoint, endPoint: CGPoint)","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uiview\/addshadow(color:opacity:radius:offset:)","title":"func addShadow(color: UIColor, opacity: Float, radius: CGFloat, offset: CGSize)","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uiview\/addshimmereffect()","title":"func addShimmerEffect()","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uiview\/center(to:)","title":"func center(to: UIView) -> Self","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uiview\/centerx(to:)","title":"func centerX(to: UIView) -> Self","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uiview\/centery(to:)","title":"func centerY(to: UIView) -> Self","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uiview\/constraintheight(_:)","title":"func constraintHeight(CGFloat) -> NSLayoutConstraint","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uiview\/constraintsize(to:)","title":"func constraintSize(to: CGSize) -> [NSLayoutConstraint]","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uiview\/constrainttocenter(of:)","title":"func constraintToCenter(of: UIView) -> [NSLayoutConstraint]","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uiview\/constrainttoedges(of:insets:)","title":"func constraintToEdges(of: UIView, insets: UIEdgeInsets) -> [NSLayoutConstraint]","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uiview\/constraintwidth(_:)","title":"func constraintWidth(CGFloat) -> NSLayoutConstraint","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uiview\/deactivateconstraint(relatedto:attribute:)","title":"func deactivateConstraint(relatedTo: UIView, attribute: NSLayoutConstraint.Attribute)","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uiview\/findconstraint(relatedto:attribute:)","title":"func findConstraint(relatedTo: UIView, attribute: NSLayoutConstraint.Attribute) -> NSLayoutConstraint?","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uiview\/makeconstraints(_:)","title":"func makeConstraints((UIView) -> [NSLayoutConstraint]) -> [NSLayoutConstraint]","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uiview\/pinbottom(to:)","title":"func pinBottom(to: CGFloat) -> Self","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uiview\/pinedges(to:insets:)","title":"func pinEdges(to: UIView, insets: UIEdgeInsets) -> Self","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uiview\/pinleft(to:)","title":"func pinLeft(to: CGFloat) -> Self","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uiview\/pinright(to:)","title":"func pinRight(to: CGFloat) -> Self","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uiview\/pintop(to:)","title":"func pinTop(to: CGFloat) -> Self","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uiview\/removeallsubviews()","title":"func removeAllSubviews()","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uiview\/rotate(degrees:)","title":"func rotate(degrees: CGFloat)","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uiview\/roundcorners(corners:radius:)","title":"func roundCorners(corners: UIRectCorner, radius: CGFloat)","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uiview\/setheight(_:)","title":"func setHeight(CGFloat) -> Self","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uiview\/setwidth(_:)","title":"func setWidth(CGFloat) -> Self","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uiview\/shake()","title":"func shake()","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uiview\/updateconstraint(relatedto:attribute:constant:)","title":"func updateConstraint(relatedTo: UIView, attribute: NSLayoutConstraint.Attribute, constant: CGFloat)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/uikit\/uiview\/reuseid","title":"static var reuseId: String","type":"property"}],"path":"\/documentation\/easycode\/uikit\/uiview","title":"UIView","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/easycode\/uikit\/uiviewcontroller\/ismodal","title":"var isModal: Bool","type":"property"},{"path":"\/documentation\/easycode\/uikit\/uiviewcontroller\/statusbarframe","title":"var statusBarFrame: CGRect?","type":"property"},{"path":"\/documentation\/easycode\/uikit\/uiviewcontroller\/topmostviewcontroller","title":"var topmostViewController: UIViewController","type":"property"},{"path":"\/documentation\/easycode\/uikit\/uiviewcontroller\/windowframe","title":"var windowFrame: CGRect?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/uikit\/uiviewcontroller\/dismisswithtransitionfromleft()","title":"func dismissWithTransitionFromLeft()","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uiviewcontroller\/gettopmostviewcontrollerinchain(containing:)","title":"func getTopmostViewControllerInChain(containing: UIViewController) -> UIViewController","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uiviewcontroller\/pop(to:animated:)","title":"func pop(to: UIViewController?, animated: Bool)","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uiviewcontroller\/poptoroot(animated:)","title":"func popToRoot(animated: Bool)","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uiviewcontroller\/presentmailpage(with:)","title":"func presentMailPage(with: MailConfiguration)","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uiviewcontroller\/presentwebpage(with:)","title":"func presentWebPage(with: URL)","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uiviewcontroller\/presentwithtransitionfromright(_:)","title":"func presentWithTransitionFromRight(UIViewController)","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uiviewcontroller\/push(_:removecontrollerswithindices:animated:)","title":"func push(UIViewController, removeControllersWithIndices: [Int], animated: Bool)","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uiviewcontroller\/push(_:removecurrent:animated:)","title":"func push(UIViewController, removeCurrent: Bool, animated: Bool)","type":"method"},{"path":"\/documentation\/easycode\/uikit\/uiviewcontroller\/saveimagetogallery(_:)","title":"func saveImageToGallery(UIImage)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/easycode\/uikit\/uiviewcontroller\/mailcomposecontroller(_:didfinishwith:error:)","title":"func mailComposeController(MFMailComposeViewController, didFinishWith: MFMailComposeResult, error: Error?)","type":"method"}],"path":"\/documentation\/easycode\/uikit\/uiviewcontroller\/mfmailcomposeviewcontrollerdelegate-implementations","title":"MFMailComposeViewControllerDelegate Implementations","type":"symbol"}],"path":"\/documentation\/easycode\/uikit\/uiviewcontroller","title":"UIViewController","type":"extension"}],"path":"\/documentation\/easycode\/uikit","title":"UIKit","type":"extension"}],"path":"\/documentation\/easycode","title":"EasyCode","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}