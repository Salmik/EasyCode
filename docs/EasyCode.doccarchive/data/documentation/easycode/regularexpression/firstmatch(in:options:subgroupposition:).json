{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"firstMatch"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"in"},{"kind":"text","text":" "},{"text":"string","kind":"internalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"options"},{"text":": ","kind":"text"},{"text":"NSRegularExpression","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSRegularExpression"},{"kind":"text","text":"."},{"preciseIdentifier":"c:@E@NSMatchingOptions","kind":"typeIdentifier","text":"MatchingOptions"},{"kind":"text","text":" = [], "},{"kind":"externalParam","text":"subgroupPosition"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":" = 0) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":"?","kind":"text"}],"platforms":["iOS"]}]},{"parameters":[{"content":[{"inlineContent":[{"text":"The string to search for matches.","type":"text"}],"type":"paragraph"}],"name":"string"},{"name":"options","content":[{"inlineContent":[{"type":"text","text":"The matching options to use. Default is an empty array."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The position of the subgroup to return. Default is 0."}]}],"name":"subgroupPosition"}],"kind":"parameters"},{"content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The first matched substring or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if no match is found."}]}],"kind":"content"},{"kind":"content","content":[{"text":"Example:","type":"heading","anchor":"Example","level":1},{"syntax":"c","type":"codeListing","code":["let regex: RegularExpression = \"(\\\\d+)\"","if let firstMatch = regex.firstMatch(in: \"The year is 2024\") {","    print(firstMatch) \/\/ Output: \"2024\"","}"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/easycode\/regularexpression\/firstmatch(in:options:subgroupposition:)"]}],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"firstMatch","kind":"identifier"},{"kind":"text","text":"("},{"text":"in","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"options","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"NSRegularExpression","preciseIdentifier":"c:objc(cs)NSRegularExpression"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"MatchingOptions","preciseIdentifier":"c:@E@NSMatchingOptions"},{"text":", ","kind":"text"},{"text":"subgroupPosition","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?","kind":"text"}],"role":"symbol","symbolKind":"method","roleHeading":"Instance Method","title":"firstMatch(in:options:subgroupPosition:)","modules":[{"name":"EasyCode"}],"externalID":"s:8EasyCode17RegularExpressionV10firstMatch2in7options16subgroupPositionSSSgSS_So17NSMatchingOptionsVSitF"},"hierarchy":{"paths":[["doc:\/\/salmik.EasyCode\/documentation\/EasyCode","doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/RegularExpression"]]},"kind":"symbol","sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/RegularExpression\/firstMatch(in:options:subgroupPosition:)"},"abstract":[{"type":"text","text":"Finds the first match of the regular expression in the given string and returns the specified subgroup."}],"references":{"doc://salmik.EasyCode/documentation/EasyCode":{"url":"\/documentation\/easycode","abstract":[],"identifier":"doc:\/\/salmik.EasyCode\/documentation\/EasyCode","title":"EasyCode","role":"collection","kind":"symbol","type":"topic"},"doc://salmik.EasyCode/documentation/EasyCode/RegularExpression/firstMatch(in:options:subgroupPosition:)":{"url":"\/documentation\/easycode\/regularexpression\/firstmatch(in:options:subgroupposition:)","identifier":"doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/RegularExpression\/firstMatch(in:options:subgroupPosition:)","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Finds the first match of the regular expression in the given string and returns the specified subgroup."}],"title":"firstMatch(in:options:subgroupPosition:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"firstMatch","kind":"identifier"},{"text":"(","kind":"text"},{"text":"in","kind":"externalParam"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"options","kind":"externalParam"},{"kind":"text","text":": "},{"text":"NSRegularExpression","preciseIdentifier":"c:objc(cs)NSRegularExpression","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"c:@E@NSMatchingOptions","text":"MatchingOptions"},{"text":", ","kind":"text"},{"text":"subgroupPosition","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"?"}]},"doc://salmik.EasyCode/documentation/EasyCode/RegularExpression":{"url":"\/documentation\/easycode\/regularexpression","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RegularExpression"}],"abstract":[{"type":"text","text":"A struct that wraps around "},{"type":"codeVoice","code":"NSRegularExpression"},{"text":" to provide a more Swift-friendly interface for regular expression operations.","type":"text"}],"type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RegularExpression","kind":"identifier"}],"title":"RegularExpression","identifier":"doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/RegularExpression"}}}