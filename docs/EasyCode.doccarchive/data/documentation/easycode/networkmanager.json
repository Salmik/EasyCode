{"schemaVersion":{"patch":0,"major":0,"minor":3},"relationshipsSections":[{"title":"Inherits From","identifiers":["doc:\/\/salmik.EasyCode\/objc(cs)NSObject"],"type":"inheritsFrom","kind":"relationships"},{"identifiers":["doc:\/\/salmik.EasyCode\/objc(pl)NSURLSessionDelegate","doc:\/\/salmik.EasyCode\/objc(pl)NSObject","doc:\/\/salmik.EasyCode\/s7CVarArgP","doc:\/\/salmik.EasyCode\/s28CustomDebugStringConvertibleP","doc:\/\/salmik.EasyCode\/s23CustomStringConvertibleP","doc:\/\/salmik.EasyCode\/SQ","doc:\/\/salmik.EasyCode\/SH"],"type":"conformsTo","title":"Conforms To","kind":"relationships"}],"kind":"symbol","variants":[{"paths":["\/documentation\/easycode\/networkmanager"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"abstract":[{"code":"NetworkManager","type":"codeVoice"},{"text":" is a class responsible for managing network requests in your application. It provides","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"methods for making standard HTTP requests, handling multipart form data, and supports SSL pinning for enhanced security."},{"text":" ","type":"text"},{"type":"text","text":"The class also includes request logging capabilities and offers both callback-based and async\/await APIs."}],"topicSections":[{"identifiers":["doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager\/init()"],"title":"Initializers"},{"title":"Instance Properties","identifiers":["doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager\/certDataItems","doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager\/isNeedToLogRequests","doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager\/isSSLPinningEnabled","doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager\/session"]},{"title":"Instance Methods","identifiers":["doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager\/multiPart(_:isNeedToResumeImmediatly:with:completion:)","doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager\/multiPart(_:with:)","doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager\/request(_:)","doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager\/request(_:isNeedToResumeImmediatly:completion:)"]},{"identifiers":["doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager\/URLSessionDelegate-Implementations"],"generated":true,"title":"Default Implementations"}],"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NetworkManager"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":1,"type":"heading","text":"Example","anchor":"Example"},{"syntax":"swift","code":["import UIKit","","struct Post: Codable {","","    let userId: Int","    let id: Int","    let title: String","    let body: String","}","","class ViewController: UIViewController {","","    private let performManager = PerformManager()","","    private let networkManager: NetworkManager = {","        let manager = NetworkManager()","        manager.certDataItems = Bundle.main.SSLCertificates","        manager.isSSLPinningEnabled = false \/\/ default is false","        manager.isNeedToLogRequests = true \/\/ default is true","        return manager","    }()","","    override func viewDidLoad() {","        super.viewDidLoad()","        view.backgroundColor = .white","","        \/\/ async\/await","        performManager.addTask { [weak networkManager] in","            await networkManager?.request(JSONPlaceholderApi.getComments(id: 1))","        }","        performManager.addTask { [weak networkManager] in","            let post = Post(userId: 132, id: 129, title: \"Zhanibek\", body: \"TestBody\")","            let postRequest = await networkManager?.request(JSONPlaceholderApi.insertPost(post: post))","","            guard let decodedPost: Post = postRequest?.decode() else { return }","            print(decodedPost.title)","        }","        performManager.addTask { [weak networkManager] in","            guard let data = UIImage(systemName: \"star\")?.jpegData(compressionQuality: 1) else { return }","","            let arrayOfImages = [","                (data, \"image\", \"image.jpg\", data.mimeType),","                (data, \"image2\", \"image2.jpg\", data.mimeType),","                (data, \"image3\", \"image3.jpg\", data.mimeType)","            ]","            let _ = await networkManager?.multiPart(JSONPlaceholderApi.multipart, with: arrayOfImages)","            print(\"Multipart\")","        }","        performManager.performTasks(inSequence: true) {","            print(\"AllTasks Done!\")","            print(Thread.current)","        }","","        \/\/ default","        networkManager.request(JSONPlaceholderApi.getComments(id: 1)) { response in","            guard response.success else { return }","            print(\"Data\")","        }","","        let post = Post(userId: 132, id: 129, title: \"Zhanibek\", body: \"TestBody\")","        networkManager.request(JSONPlaceholderApi.insertPost(post: post)) { response in","            guard response.success else { return }","","            if let post: Post = response.decode() {","                print(post.title)","            }","        }","","        if let data = UIImage(systemName: \"star\")?.jpegData(compressionQuality: 1) {","            let arrayOfImages = [","                (data, \"image\", \"image.jpg\", data.mimeType),","                (data, \"image2\", \"image2.jpg\", data.mimeType),","                (data, \"image3\", \"image3.jpg\", data.mimeType)","            ]","","            networkManager.multiPart(JSONPlaceholderApi.multipart, with: arrayOfImages) { response in","                guard response.success else { return }","                print(\"Data\")","            }","        }","    }","}","","import Foundation","","enum JSONPlaceholderApi: EndPointProtocol {","","    case getComments(id: Int)","    case insertPost(post: Post)","    case multipart","","    var baseURL: String {","        switch self {","        case .getComments, .insertPost: return \"https:\/\/jsonplaceholder.typicode.com\/\"","        case .multipart: return \"https:\/\/httpbin.org\/\"","        }","    }","","    var path: String {","        switch self {","        case .getComments: return \"comments\"","        case .insertPost: return \"posts\"","        case .multipart: return \"post\"","        }","    }","","    var timeoutInterval: TimeInterval {","        switch self {","        case .getComments, .insertPost: return 30","        case .multipart: return 60","        }","    }","","    var cachePolicy: URLRequest.CachePolicy {","        switch self {","        case .getComments, .insertPost: return .returnCacheDataElseLoad","        case .multipart: return .reloadIgnoringLocalAndRemoteCacheData","        }","    }","","    var encoding: EncodingType {","        switch self {","        case .getComments: return .url","        case .insertPost: return .json","        case .multipart: return .none","        }","    }","","    var httpMethod: HTTPMethod {","        switch self {","        case .getComments: return .get","        case .insertPost: return .post","        case .multipart: return .post","        }","    }","","    var headers: HTTPHeaders? {","        switch self {","        case .getComments, .insertPost, .multipart: return [\"Authorization\": \"Bearer jgjdfsgnjfdnjhl68430968904\"]","        }","    }","","    var parameters: Parameters? {","        switch self {","        case .getComments(let id): return [\"postId\": id]","        case .insertPost(let post): return encode(post)","        case .multipart: return nil","        }","    }","}"],"type":"codeListing"}],"kind":"content"}],"identifier":{"url":"doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager","interfaceLanguage":"swift"},"metadata":{"navigatorTitle":[{"text":"NetworkManager","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NetworkManager","kind":"identifier"}],"title":"NetworkManager","modules":[{"name":"EasyCode"}],"externalID":"c:@M@EasyCode@objc(cs)NetworkManager","roleHeading":"Class","role":"symbol","symbolKind":"class"},"hierarchy":{"paths":[["doc:\/\/salmik.EasyCode\/documentation\/EasyCode"]]},"references":{"doc://salmik.EasyCode/documentation/EasyCode/NetworkManager/isNeedToLogRequests":{"type":"topic","url":"\/documentation\/easycode\/networkmanager\/isneedtologrequests","kind":"symbol","title":"isNeedToLogRequests","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"isNeedToLogRequests","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager\/isNeedToLogRequests","abstract":[{"type":"text","text":"A boolean value that determines whether network requests and responses should be logged."}],"role":"symbol"},"doc://salmik.EasyCode/objc(cs)NSObject":{"type":"unresolvable","identifier":"doc:\/\/salmik.EasyCode\/objc(cs)NSObject","title":"ObjectiveC.NSObject"},"doc://salmik.EasyCode/documentation/EasyCode":{"url":"\/documentation\/easycode","abstract":[],"identifier":"doc:\/\/salmik.EasyCode\/documentation\/EasyCode","title":"EasyCode","role":"collection","kind":"symbol","type":"topic"},"doc://salmik.EasyCode/documentation/EasyCode/NetworkManager/certDataItems":{"type":"topic","url":"\/documentation\/easycode\/networkmanager\/certdataitems","kind":"symbol","title":"certDataItems","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"certDataItems","kind":"identifier"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier","text":"Data"},{"text":"]","kind":"text"}],"identifier":"doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager\/certDataItems","abstract":[{"type":"text","text":"An array of "},{"type":"codeVoice","code":"Data"},{"type":"text","text":" objects representing the SSL certificates to be used for SSL pinning."}],"role":"symbol"},"doc://salmik.EasyCode/documentation/EasyCode/NetworkManager/isSSLPinningEnabled":{"url":"\/documentation\/easycode\/networkmanager\/issslpinningenabled","abstract":[{"type":"text","text":"A boolean value that indicates whether SSL pinning is enabled. When enabled, the manager will perform SSL"},{"type":"text","text":" "},{"type":"text","text":"pinning by validating the server’s SSL certificate against the certificates included in "},{"type":"codeVoice","code":"certDataItems"},{"text":".","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isSSLPinningEnabled"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"identifier":"doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager\/isSSLPinningEnabled","title":"isSSLPinningEnabled","role":"symbol","kind":"symbol","type":"topic"},"doc://salmik.EasyCode/documentation/EasyCode/NetworkManager/init()":{"role":"symbol","abstract":[{"text":"Initializes a new instance of ","type":"text"},{"type":"codeVoice","code":"NetworkManager"},{"type":"text","text":"."}],"fragments":[{"kind":"identifier","text":"init"},{"text":"()","kind":"text"}],"url":"\/documentation\/easycode\/networkmanager\/init()","type":"topic","title":"init()","identifier":"doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager\/init()","kind":"symbol"},"doc://salmik.EasyCode/documentation/EasyCode/NetworkManager/URLSessionDelegate-Implementations":{"type":"topic","kind":"article","url":"\/documentation\/easycode\/networkmanager\/urlsessiondelegate-implementations","title":"URLSessionDelegate Implementations","identifier":"doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager\/URLSessionDelegate-Implementations","abstract":[],"role":"collectionGroup"},"doc://salmik.EasyCode/documentation/EasyCode/NetworkManager/multiPart(_:isNeedToResumeImmediatly:with:completion:)":{"type":"topic","url":"\/documentation\/easycode\/networkmanager\/multipart(_:isneedtoresumeimmediatly:with:completion:)","kind":"symbol","title":"multiPart(_:isNeedToResumeImmediatly:with:completion:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"multiPart","kind":"identifier"},{"kind":"text","text":"("},{"text":"EndPointProtocol","kind":"typeIdentifier","preciseIdentifier":"s:8EasyCode16EndPointProtocolP"},{"text":", ","kind":"text"},{"text":"isNeedToResumeImmediatly","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"with"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:8EasyCode26MultipartFormDataParametera","text":"MultipartFormDataParameter","kind":"typeIdentifier"},{"kind":"text","text":"], "},{"text":"completion","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"NetworkResponseProtocol","kind":"typeIdentifier","preciseIdentifier":"s:8EasyCode23NetworkResponseProtocolP"},{"kind":"text","text":") -> "},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSURLSessionDataTask","text":"URLSessionDataTask"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager\/multiPart(_:isNeedToResumeImmediatly:with:completion:)","abstract":[{"type":"text","text":"Sends a multipart form-data request using the specified endpoint and multipart parameters."}],"role":"symbol"},"doc://salmik.EasyCode/documentation/EasyCode/NetworkManager/session":{"type":"topic","kind":"symbol","url":"\/documentation\/easycode\/networkmanager\/session","title":"session","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"session"},{"text":": ","kind":"text"},{"text":"URLSession","kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSURLSession"}],"identifier":"doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager\/session","abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"URLSession"},{"text":" used for making network requests. It is lazily initialized with the default configuration","type":"text"},{"text":" ","type":"text"},{"text":"and uses ","type":"text"},{"type":"codeVoice","code":"self"},{"text":" as the delegate.","type":"text"}],"role":"symbol"},"doc://salmik.EasyCode/objc(pl)NSURLSessionDelegate":{"identifier":"doc:\/\/salmik.EasyCode\/objc(pl)NSURLSessionDelegate","title":"Foundation.URLSessionDelegate","type":"unresolvable"},"doc://salmik.EasyCode/documentation/EasyCode/NetworkManager/multiPart(_:with:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"multiPart"},{"kind":"text","text":"("},{"text":"EndPointProtocol","preciseIdentifier":"s:8EasyCode16EndPointProtocolP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"with"},{"text":": [","kind":"text"},{"text":"MultipartFormDataParameter","kind":"typeIdentifier","preciseIdentifier":"s:8EasyCode26MultipartFormDataParametera"},{"text":"]) ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:8EasyCode23NetworkResponseProtocolP","text":"NetworkResponseProtocol","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager\/multiPart(_:with:)","title":"multiPart(_:with:)","role":"symbol","type":"topic","url":"\/documentation\/easycode\/networkmanager\/multipart(_:with:)","abstract":[{"type":"text","text":"Sends a multipart form-data request using async\/await and returns the response."}]},"doc://salmik.EasyCode/SQ":{"identifier":"doc:\/\/salmik.EasyCode\/SQ","type":"unresolvable","title":"Swift.Equatable"},"doc://salmik.EasyCode/SH":{"identifier":"doc:\/\/salmik.EasyCode\/SH","type":"unresolvable","title":"Swift.Hashable"},"doc://salmik.EasyCode/documentation/EasyCode/NetworkManager/request(_:)":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"request","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:8EasyCode16EndPointProtocolP","text":"EndPointProtocol","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"text":"NetworkResponseProtocol","preciseIdentifier":"s:8EasyCode23NetworkResponseProtocolP","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"title":"request(_:)","role":"symbol","identifier":"doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager\/request(_:)","url":"\/documentation\/easycode\/networkmanager\/request(_:)","type":"topic","abstract":[{"text":"Sends an HTTP request using async\/await and returns the response.","type":"text"}]},"doc://salmik.EasyCode/s23CustomStringConvertibleP":{"title":"Swift.CustomStringConvertible","type":"unresolvable","identifier":"doc:\/\/salmik.EasyCode\/s23CustomStringConvertibleP"},"doc://salmik.EasyCode/objc(pl)NSObject":{"title":"ObjectiveC.NSObjectProtocol","type":"unresolvable","identifier":"doc:\/\/salmik.EasyCode\/objc(pl)NSObject"},"doc://salmik.EasyCode/s28CustomDebugStringConvertibleP":{"identifier":"doc:\/\/salmik.EasyCode\/s28CustomDebugStringConvertibleP","title":"Swift.CustomDebugStringConvertible","type":"unresolvable"},"doc://salmik.EasyCode/documentation/EasyCode/NetworkManager":{"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"NetworkManager","kind":"identifier"}],"title":"NetworkManager","abstract":[{"type":"codeVoice","code":"NetworkManager"},{"text":" is a class responsible for managing network requests in your application. It provides","type":"text"},{"type":"text","text":" "},{"text":"methods for making standard HTTP requests, handling multipart form data, and supports SSL pinning for enhanced security.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"The class also includes request logging capabilities and offers both callback-based and async\/await APIs."}],"identifier":"doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager","role":"symbol","url":"\/documentation\/easycode\/networkmanager","navigatorTitle":[{"text":"NetworkManager","kind":"identifier"}],"type":"topic"},"doc://salmik.EasyCode/s7CVarArgP":{"title":"Swift.CVarArg","type":"unresolvable","identifier":"doc:\/\/salmik.EasyCode\/s7CVarArgP"},"doc://salmik.EasyCode/documentation/EasyCode/NetworkManager/request(_:isNeedToResumeImmediatly:completion:)":{"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"request","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"EndPointProtocol","preciseIdentifier":"s:8EasyCode16EndPointProtocolP"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"isNeedToResumeImmediatly"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"completion","kind":"externalParam"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:8EasyCode23NetworkResponseProtocolP","kind":"typeIdentifier","text":"NetworkResponseProtocol"},{"kind":"text","text":") -> "},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSURLSessionDataTask","text":"URLSessionDataTask"},{"text":"?","kind":"text"}],"title":"request(_:isNeedToResumeImmediatly:completion:)","abstract":[{"type":"text","text":"Sends an HTTP request using the specified endpoint and returns the response via a completion handler."}],"role":"symbol","url":"\/documentation\/easycode\/networkmanager\/request(_:isneedtoresumeimmediatly:completion:)","identifier":"doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager\/request(_:isNeedToResumeImmediatly:completion:)"}}}