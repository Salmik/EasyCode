{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@discardableResult","kind":"attribute"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"multiPart","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"text":"endpoint","kind":"internalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/EndPointProtocol","preciseIdentifier":"s:8EasyCode16EndPointProtocolP","text":"EndPointProtocol"},{"kind":"text","text":", "},{"text":"with","kind":"externalParam"},{"kind":"text","text":" "},{"text":"multiPartParams","kind":"internalParam"},{"text":": [","kind":"text"},{"text":"MultipartFormDataParameter","identifier":"doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/MultipartFormDataParameter","kind":"typeIdentifier","preciseIdentifier":"s:8EasyCode26MultipartFormDataParametera"},{"text":"]) ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"identifier":"doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkResponseProtocol","preciseIdentifier":"s:8EasyCode23NetworkResponseProtocolP","text":"NetworkResponseProtocol","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"platforms":["iOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"endpoint","content":[{"inlineContent":[{"type":"text","text":"An object conforming to "},{"type":"codeVoice","code":"EndPointProtocol"},{"text":" that defines the request details.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"An array of "},{"code":"MultipartFormDataParameter","type":"codeVoice"},{"type":"text","text":" representing the form data."}],"type":"paragraph"}],"name":"multiPartParams"}],"kind":"parameters"},{"kind":"content","content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"A ","type":"text"},{"code":"NetworkResponseProtocol","type":"codeVoice"},{"text":" object representing the response, or ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" if the request could not be created.","type":"text"}]}]},{"kind":"content","content":[{"anchor":"Example","level":1,"type":"heading","text":"Example"},{"syntax":"swift","type":"codeListing","code":["Task {","    if let response = await networkManager.multiPart(myEndpoint, with: multipartParams) {","        if response.success {","            print(\"Multipart async request succeeded\")","        } else {","            print(\"Multipart async request failed with error: \\(response.error?.errorMessage ?? \"Unknown error\")\")","        }","    }","}"]}]}],"metadata":{"modules":[{"name":"EasyCode"}],"role":"symbol","roleHeading":"Instance Method","symbolKind":"method","title":"multiPart(_:with:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"multiPart","kind":"identifier"},{"kind":"text","text":"("},{"text":"EndPointProtocol","preciseIdentifier":"s:8EasyCode16EndPointProtocolP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:8EasyCode26MultipartFormDataParametera","text":"MultipartFormDataParameter"},{"text":"]) ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"text":"NetworkResponseProtocol","preciseIdentifier":"s:8EasyCode23NetworkResponseProtocolP","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"externalID":"s:8EasyCode14NetworkManagerC9multiPart_4withAA0C16ResponseProtocol_pSgAA08EndPointI0_p_Say10Foundation4DataV4data_SS4nameSS8fileNameSS8mimeTypetGtYaF"},"abstract":[{"text":"Sends a multipart form-data request using async\/await and returns the response.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/easycode\/networkmanager\/multipart(_:with:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager\/multiPart(_:with:)"},"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/salmik.EasyCode\/documentation\/EasyCode","doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://salmik.EasyCode/documentation/EasyCode/NetworkManager/multiPart(_:with:)":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager\/multiPart(_:with:)","url":"\/documentation\/easycode\/networkmanager\/multipart(_:with:)","title":"multiPart(_:with:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"multiPart","kind":"identifier"},{"text":"(","kind":"text"},{"text":"EndPointProtocol","kind":"typeIdentifier","preciseIdentifier":"s:8EasyCode16EndPointProtocolP"},{"text":", ","kind":"text"},{"text":"with","kind":"externalParam"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:8EasyCode26MultipartFormDataParametera","text":"MultipartFormDataParameter","kind":"typeIdentifier"},{"text":"]) ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:8EasyCode23NetworkResponseProtocolP","text":"NetworkResponseProtocol"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Sends a multipart form-data request using async\/await and returns the response."}],"type":"topic"},"doc://salmik.EasyCode/documentation/EasyCode/EndPointProtocol":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/EndPointProtocol","url":"\/documentation\/easycode\/endpointprotocol","title":"EndPointProtocol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"EndPointProtocol","kind":"identifier"}],"abstract":[{"type":"codeVoice","code":"EndPointProtocol"},{"text":" is a protocol that defines the essential properties and methods required to create","type":"text"},{"type":"text","text":" "},{"type":"text","text":"a network endpoint. It provides a blueprint for configuring the various aspects of a network request,"},{"type":"text","text":" "},{"type":"text","text":"such as the URL, HTTP method, headers, parameters, and encoding."}],"navigatorTitle":[{"text":"EndPointProtocol","kind":"identifier"}],"type":"topic"},"doc://salmik.EasyCode/documentation/EasyCode/NetworkManager":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager","url":"\/documentation\/easycode\/networkmanager","title":"NetworkManager","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"NetworkManager"}],"abstract":[{"type":"codeVoice","code":"NetworkManager"},{"type":"text","text":" is a class responsible for managing network requests in your application. It provides"},{"type":"text","text":" "},{"type":"text","text":"methods for making standard HTTP requests, handling multipart form data, and supports SSL pinning for enhanced security."},{"type":"text","text":" "},{"text":"The class also includes request logging capabilities and offers both callback-based and async\/await APIs.","type":"text"}],"navigatorTitle":[{"text":"NetworkManager","kind":"identifier"}],"type":"topic"},"doc://salmik.EasyCode/documentation/EasyCode":{"abstract":[],"identifier":"doc:\/\/salmik.EasyCode\/documentation\/EasyCode","url":"\/documentation\/easycode","title":"EasyCode","type":"topic","kind":"symbol","role":"collection"},"doc://salmik.EasyCode/documentation/EasyCode/MultipartFormDataParameter":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/MultipartFormDataParameter","url":"\/documentation\/easycode\/multipartformdataparameter","title":"MultipartFormDataParameter","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MultipartFormDataParameter"}],"abstract":[],"navigatorTitle":[{"text":"MultipartFormDataParameter","kind":"identifier"}],"type":"topic"},"doc://salmik.EasyCode/documentation/EasyCode/NetworkResponseProtocol":{"abstract":[{"code":"NetworkResponseProtocol","type":"codeVoice"},{"text":" is a protocol that defines the structure of a network response.","type":"text"},{"type":"text","text":" "},{"type":"text","text":"It includes properties for checking the success of the response, the status code, the data received,"},{"type":"text","text":" "},{"type":"text","text":"any errors encountered, and the headers associated with the response."}],"role":"symbol","type":"topic","title":"NetworkResponseProtocol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"NetworkResponseProtocol"}],"identifier":"doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkResponseProtocol","navigatorTitle":[{"text":"NetworkResponseProtocol","kind":"identifier"}],"url":"\/documentation\/easycode\/networkresponseprotocol","kind":"symbol"}}}