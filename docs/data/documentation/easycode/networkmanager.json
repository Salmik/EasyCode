{"abstract":[{"code":"NetworkManager","type":"codeVoice"},{"type":"text","text":" is a class responsible for managing network requests in your application. It provides"},{"type":"text","text":" "},{"type":"text","text":"methods for making standard HTTP requests, handling multipart form data, and supports SSL pinning for enhanced security."},{"text":" ","type":"text"},{"text":"The class also includes request logging capabilities and offers both callback-based and async\/await APIs.","type":"text"}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager\/init()"]},{"title":"Instance Properties","identifiers":["doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager\/certDataItems","doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager\/isNeedToLogRequests","doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager\/isSSLPinningEnabled","doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager\/session"]},{"title":"Instance Methods","identifiers":["doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager\/multiPart(_:isNeedToResumeImmediatly:with:completion:)","doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager\/multiPart(_:with:)","doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager\/request(_:)","doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager\/request(_:isNeedToResumeImmediatly:completion:)"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager\/URLSessionDelegate-Implementations"]}],"kind":"symbol","variants":[{"paths":["\/documentation\/easycode\/networkmanager"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NetworkManager"}],"platforms":["iOS"],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":1,"type":"heading","anchor":"Example","text":"Example"},{"syntax":"swift","code":["import UIKit","","struct Post: Codable {","","    let userId: Int","    let id: Int","    let title: String","    let body: String","}","","class ViewController: UIViewController {","","    private let performManager = PerformManager()","","    private let networkManager: NetworkManager = {","        let manager = NetworkManager()","        manager.certDataItems = Bundle.main.SSLCertificates","        manager.isSSLPinningEnabled = false \/\/ default is false","        manager.isNeedToLogRequests = true \/\/ default is true","        return manager","    }()","","    override func viewDidLoad() {","        super.viewDidLoad()","        view.backgroundColor = .white","","        \/\/ async\/await","        performManager.addTask { [weak networkManager] in","            await networkManager?.request(JSONPlaceholderApi.getComments(id: 1))","        }","        performManager.addTask { [weak networkManager] in","            let post = Post(userId: 132, id: 129, title: \"Zhanibek\", body: \"TestBody\")","            let postRequest = await networkManager?.request(JSONPlaceholderApi.insertPost(post: post))","","            guard let decodedPost: Post = postRequest?.decode() else { return }","            print(decodedPost.title)","        }","        performManager.addTask { [weak networkManager] in","            guard let data = UIImage(systemName: \"star\")?.jpegData(compressionQuality: 1) else { return }","","            let arrayOfImages = [","                (data, \"image\", \"image.jpg\", data.mimeType),","                (data, \"image2\", \"image2.jpg\", data.mimeType),","                (data, \"image3\", \"image3.jpg\", data.mimeType)","            ]","            let _ = await networkManager?.multiPart(JSONPlaceholderApi.multipart, with: arrayOfImages)","            print(\"Multipart\")","        }","        performManager.performTasks(inSequence: true) {","            print(\"AllTasks Done!\")","            print(Thread.current)","        }","","        \/\/ default","        networkManager.request(JSONPlaceholderApi.getComments(id: 1)) { response in","            guard response.success else { return }","            print(\"Data\")","        }","","        let post = Post(userId: 132, id: 129, title: \"Zhanibek\", body: \"TestBody\")","        networkManager.request(JSONPlaceholderApi.insertPost(post: post)) { response in","            guard response.success else { return }","","            if let post: Post = response.decode() {","                print(post.title)","            }","        }","","        if let data = UIImage(systemName: \"star\")?.jpegData(compressionQuality: 1) {","            let arrayOfImages = [","                (data, \"image\", \"image.jpg\", data.mimeType),","                (data, \"image2\", \"image2.jpg\", data.mimeType),","                (data, \"image3\", \"image3.jpg\", data.mimeType)","            ]","","            networkManager.multiPart(JSONPlaceholderApi.multipart, with: arrayOfImages) { response in","                guard response.success else { return }","                print(\"Data\")","            }","        }","    }","}","","import Foundation","","enum JSONPlaceholderApi: EndPointProtocol {","","    case getComments(id: Int)","    case insertPost(post: Post)","    case multipart","","    var baseURL: String {","        switch self {","        case .getComments, .insertPost: return \"https:\/\/jsonplaceholder.typicode.com\/\"","        case .multipart: return \"https:\/\/httpbin.org\/\"","        }","    }","","    var path: String {","        switch self {","        case .getComments: return \"comments\"","        case .insertPost: return \"posts\"","        case .multipart: return \"post\"","        }","    }","","    var timeoutInterval: TimeInterval {","        switch self {","        case .getComments, .insertPost: return 30","        case .multipart: return 60","        }","    }","","    var cachePolicy: URLRequest.CachePolicy {","        switch self {","        case .getComments, .insertPost: return .returnCacheDataElseLoad","        case .multipart: return .reloadIgnoringLocalAndRemoteCacheData","        }","    }","","    var encoding: EncodingType {","        switch self {","        case .getComments: return .url","        case .insertPost: return .json","        case .multipart: return .none","        }","    }","","    var httpMethod: HTTPMethod {","        switch self {","        case .getComments: return .get","        case .insertPost: return .post","        case .multipart: return .post","        }","    }","","    var headers: HTTPHeaders? {","        switch self {","        case .getComments, .insertPost, .multipart: return [\"Authorization\": \"Bearer jgjdfsgnjfdnjhl68430968904\"]","        }","    }","","    var parameters: Parameters? {","        switch self {","        case .getComments(let id): return [\"postId\": id]","        case .insertPost(let post): return encode(post)","        case .multipart: return nil","        }","    }","}"],"type":"codeListing"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"relationshipsSections":[{"kind":"relationships","type":"inheritsFrom","identifiers":["doc:\/\/salmik.EasyCode\/objc(cs)NSObject"],"title":"Inherits From"},{"identifiers":["doc:\/\/salmik.EasyCode\/objc(pl)NSURLSessionDelegate","doc:\/\/salmik.EasyCode\/objc(pl)NSObject","doc:\/\/salmik.EasyCode\/s7CVarArgP","doc:\/\/salmik.EasyCode\/s28CustomDebugStringConvertibleP","doc:\/\/salmik.EasyCode\/s23CustomStringConvertibleP","doc:\/\/salmik.EasyCode\/SQ","doc:\/\/salmik.EasyCode\/SH"],"title":"Conforms To","kind":"relationships","type":"conformsTo"}],"metadata":{"modules":[{"name":"EasyCode"}],"externalID":"c:@M@EasyCode@objc(cs)NetworkManager","roleHeading":"Class","title":"NetworkManager","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NetworkManager","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"NetworkManager"}],"role":"symbol","symbolKind":"class"},"identifier":{"url":"doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/salmik.EasyCode\/documentation\/EasyCode"]]},"references":{"doc://salmik.EasyCode/objc(pl)NSObject":{"type":"unresolvable","title":"ObjectiveC.NSObjectProtocol","identifier":"doc:\/\/salmik.EasyCode\/objc(pl)NSObject"},"doc://salmik.EasyCode/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/salmik.EasyCode\/SH"},"doc://salmik.EasyCode/documentation/EasyCode/NetworkManager/isSSLPinningEnabled":{"kind":"symbol","url":"\/documentation\/easycode\/networkmanager\/issslpinningenabled","type":"topic","abstract":[{"type":"text","text":"A boolean value that indicates whether SSL pinning is enabled. When enabled, the manager will perform SSL"},{"text":" ","type":"text"},{"text":"pinning by validating the serverâ€™s SSL certificate against the certificates included in ","type":"text"},{"type":"codeVoice","code":"certDataItems"},{"type":"text","text":"."}],"title":"isSSLPinningEnabled","role":"symbol","identifier":"doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager\/isSSLPinningEnabled","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"isSSLPinningEnabled"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}]},"doc://salmik.EasyCode/documentation/EasyCode":{"abstract":[],"identifier":"doc:\/\/salmik.EasyCode\/documentation\/EasyCode","url":"\/documentation\/easycode","title":"EasyCode","type":"topic","kind":"symbol","role":"collection"},"doc://salmik.EasyCode/objc(pl)NSURLSessionDelegate":{"title":"Foundation.URLSessionDelegate","identifier":"doc:\/\/salmik.EasyCode\/objc(pl)NSURLSessionDelegate","type":"unresolvable"},"doc://salmik.EasyCode/documentation/EasyCode/NetworkManager/init()":{"kind":"symbol","url":"\/documentation\/easycode\/networkmanager\/init()","type":"topic","abstract":[{"text":"Initializes a new instance of ","type":"text"},{"type":"codeVoice","code":"NetworkManager"},{"type":"text","text":"."}],"title":"init()","role":"symbol","identifier":"doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager\/init()","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://salmik.EasyCode/documentation/EasyCode/NetworkManager/multiPart(_:isNeedToResumeImmediatly:with:completion:)":{"title":"multiPart(_:isNeedToResumeImmediatly:with:completion:)","type":"topic","identifier":"doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager\/multiPart(_:isNeedToResumeImmediatly:with:completion:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"multiPart","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","text":"EndPointProtocol","preciseIdentifier":"s:8EasyCode16EndPointProtocolP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"isNeedToResumeImmediatly"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"with"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:8EasyCode26MultipartFormDataParametera","text":"MultipartFormDataParameter","kind":"typeIdentifier"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"completion"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"NetworkResponseProtocol","preciseIdentifier":"s:8EasyCode23NetworkResponseProtocolP"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"c:objc(cs)NSURLSessionDataTask","kind":"typeIdentifier","text":"URLSessionDataTask"},{"text":"?","kind":"text"}],"kind":"symbol","abstract":[{"text":"Sends a multipart form-data request using the specified endpoint and multipart parameters.","type":"text"}],"role":"symbol","url":"\/documentation\/easycode\/networkmanager\/multipart(_:isneedtoresumeimmediatly:with:completion:)"},"doc://salmik.EasyCode/documentation/EasyCode/NetworkManager/request(_:isNeedToResumeImmediatly:completion:)":{"title":"request(_:isNeedToResumeImmediatly:completion:)","url":"\/documentation\/easycode\/networkmanager\/request(_:isneedtoresumeimmediatly:completion:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"request"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:8EasyCode16EndPointProtocolP","text":"EndPointProtocol"},{"text":", ","kind":"text"},{"text":"isNeedToResumeImmediatly","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"completion"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:8EasyCode23NetworkResponseProtocolP","text":"NetworkResponseProtocol"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSURLSessionDataTask","text":"URLSessionDataTask"},{"kind":"text","text":"?"}],"kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager\/request(_:isNeedToResumeImmediatly:completion:)","abstract":[{"text":"Sends an HTTP request using the specified endpoint and returns the response via a completion handler.","type":"text"}]},"doc://salmik.EasyCode/documentation/EasyCode/NetworkManager/URLSessionDelegate-Implementations":{"kind":"article","identifier":"doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager\/URLSessionDelegate-Implementations","title":"URLSessionDelegate Implementations","abstract":[],"role":"collectionGroup","url":"\/documentation\/easycode\/networkmanager\/urlsessiondelegate-implementations","type":"topic"},"doc://salmik.EasyCode/documentation/EasyCode/NetworkManager/isNeedToLogRequests":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"isNeedToLogRequests","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"type":"topic","role":"symbol","title":"isNeedToLogRequests","abstract":[{"text":"A boolean value that determines whether network requests and responses should be logged.","type":"text"}],"kind":"symbol","url":"\/documentation\/easycode\/networkmanager\/isneedtologrequests","identifier":"doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager\/isNeedToLogRequests"},"doc://salmik.EasyCode/documentation/EasyCode/NetworkManager":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager","url":"\/documentation\/easycode\/networkmanager","title":"NetworkManager","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"NetworkManager"}],"abstract":[{"type":"codeVoice","code":"NetworkManager"},{"type":"text","text":" is a class responsible for managing network requests in your application. It provides"},{"type":"text","text":" "},{"type":"text","text":"methods for making standard HTTP requests, handling multipart form data, and supports SSL pinning for enhanced security."},{"type":"text","text":" "},{"text":"The class also includes request logging capabilities and offers both callback-based and async\/await APIs.","type":"text"}],"navigatorTitle":[{"text":"NetworkManager","kind":"identifier"}],"type":"topic"},"doc://salmik.EasyCode/objc(cs)NSObject":{"title":"ObjectiveC.NSObject","identifier":"doc:\/\/salmik.EasyCode\/objc(cs)NSObject","type":"unresolvable"},"doc://salmik.EasyCode/documentation/EasyCode/NetworkManager/request(_:)":{"kind":"symbol","url":"\/documentation\/easycode\/networkmanager\/request(_:)","type":"topic","abstract":[{"text":"Sends an HTTP request using async\/await and returns the response.","type":"text"}],"title":"request(_:)","role":"symbol","identifier":"doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager\/request(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"request"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:8EasyCode16EndPointProtocolP","text":"EndPointProtocol"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:8EasyCode23NetworkResponseProtocolP","kind":"typeIdentifier","text":"NetworkResponseProtocol"},{"kind":"text","text":"?"}]},"doc://salmik.EasyCode/s23CustomStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/salmik.EasyCode\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible"},"doc://salmik.EasyCode/documentation/EasyCode/NetworkManager/multiPart(_:with:)":{"kind":"symbol","role":"symbol","identifier":"doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager\/multiPart(_:with:)","url":"\/documentation\/easycode\/networkmanager\/multipart(_:with:)","title":"multiPart(_:with:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"multiPart","kind":"identifier"},{"text":"(","kind":"text"},{"text":"EndPointProtocol","kind":"typeIdentifier","preciseIdentifier":"s:8EasyCode16EndPointProtocolP"},{"text":", ","kind":"text"},{"text":"with","kind":"externalParam"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:8EasyCode26MultipartFormDataParametera","text":"MultipartFormDataParameter","kind":"typeIdentifier"},{"text":"]) ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:8EasyCode23NetworkResponseProtocolP","text":"NetworkResponseProtocol"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"Sends a multipart form-data request using async\/await and returns the response."}],"type":"topic"},"doc://salmik.EasyCode/s28CustomDebugStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/salmik.EasyCode\/s28CustomDebugStringConvertibleP","title":"Swift.CustomDebugStringConvertible"},"doc://salmik.EasyCode/documentation/EasyCode/NetworkManager/certDataItems":{"identifier":"doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager\/certDataItems","kind":"symbol","title":"certDataItems","abstract":[{"type":"text","text":"An array of "},{"code":"Data","type":"codeVoice"},{"text":" objects representing the SSL certificates to be used for SSL pinning.","type":"text"}],"type":"topic","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"certDataItems","kind":"identifier"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:10Foundation4DataV","text":"Data","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"role":"symbol","url":"\/documentation\/easycode\/networkmanager\/certdataitems"},"doc://salmik.EasyCode/s7CVarArgP":{"type":"unresolvable","identifier":"doc:\/\/salmik.EasyCode\/s7CVarArgP","title":"Swift.CVarArg"},"doc://salmik.EasyCode/documentation/EasyCode/NetworkManager/session":{"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"session","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSURLSession","text":"URLSession"}],"abstract":[{"type":"text","text":"The "},{"code":"URLSession","type":"codeVoice"},{"type":"text","text":" used for making network requests. It is lazily initialized with the default configuration"},{"type":"text","text":" "},{"type":"text","text":"and uses "},{"code":"self","type":"codeVoice"},{"type":"text","text":" as the delegate."}],"identifier":"doc:\/\/salmik.EasyCode\/documentation\/EasyCode\/NetworkManager\/session","type":"topic","title":"session","url":"\/documentation\/easycode\/networkmanager\/session","role":"symbol","kind":"symbol"},"doc://salmik.EasyCode/SQ":{"type":"unresolvable","identifier":"doc:\/\/salmik.EasyCode\/SQ","title":"Swift.Equatable"}}}